generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ActionTextRichTexts {
  id             BigInt                   @id @default(autoincrement())
  name           String                   @db.VarChar
  body           String?
  recordType     String                   @map("record_type") @db.VarChar
  recordId       BigInt
  createdAt      DateTime                 @map("created_at") @db.Timestamp(6)
  updatedAt      DateTime                 @map("updated_at") @db.Timestamp(6)
  textSearchable Unsupported("tsvector")? @default(dbgenerated("to_tsvector('zhcfg'::regconfig, body)"))

  @@map("ActionTextRichTexts")
  @@unique([recordType, recordId, name], map: "idx_24595_index_action_text_rich_texts_uniqueness")
  @@unique([recordType, recordId, name], map: "index_action_text_rich_texts_uniqueness")
  @@index([textSearchable], map: "full_text_idx_for_rich_texts", type: Gin)
  @@map("action_text_rich_texts")
}

model ActiveStorageAttachments {
  id                 BigInt             @id @default(autoincrement())
  name               String             @db.VarChar(191)
  recordType         String             @map("record_type") @db.VarChar(191)
  recordId           BigInt
  blobId             BigInt
  createdAt          DateTime           @map("created_at") @db.Timestamptz(6)
  primary            Boolean?           @default(false)
  position           BigInt?            @default(1)
  activeStorageBlobs ActiveStorageBlobs @relation(fields: [blobId], references: [id], onUpdate: Restrict, map: "fk_rails_c3b3935057")

  @@map("ActiveStorageAttachments")
  @@unique([recordType, recordId, name, blobId], map: "idx_24602_index_active_storage_attachments_uniqueness")
  @@index([blobId], map: "idx_24602_index_active_storage_attachments_on_blob_id")
  @@map("active_storage_attachments")
}

model ActiveStorageBlobs {
  id                          BigInt                        @id @default(autoincrement())
  key                         String                        @unique(map: "idx_24609_index_active_storage_blobs_on_key") @db.VarChar(191)
  filename                    String                        @db.VarChar(191)
  contentType                 String?                       @map("content_type") @db.VarChar(191)
  metadata                    String?
  byteSize                    BigInt
  checksum                    String?                       @db.VarChar(191)
  createdAt                   DateTime                      @map("created_at") @db.Timestamptz(6)
  serviceName                 String                        @map("service_name") @db.VarChar(191)
  activeStorageAttachments    ActiveStorageAttachments[]
  activeStorageVariantRecords ActiveStorageVariantRecords[]

  @@map("ActiveStorageBlobs")
  @@map("active_storage_blobs")
}

model ActiveStorageVariantRecords {
  id                 BigInt             @id @default(autoincrement())
  blobId             BigInt
  variationDigest    String             @map("variation_digest") @db.VarChar(191)
  activeStorageBlobs ActiveStorageBlobs @relation(fields: [blobId], references: [id], onUpdate: Restrict, map: "fk_rails_993965df05")

  @@map("ActiveStorageVariantRecords")
  @@unique([blobId, variationDigest], map: "idx_24618_index_active_storage_variant_records_uniqueness")
  @@unique([blobId, variationDigest], map: "index_active_storage_variant_records_uniqueness")
  @@map("active_storage_variant_records")
}

model Addresses {
  id              BigInt   @id @default(autoincrement())
  recordId        Int?     @map("record_id")
  locationId      Int?     @map("location_id")
  recordType      String?  @map("record_type") @db.VarChar(32)
  consignee       String?  @db.VarChar(32)
  cellPhoneNumber String?  @map("cell_phone_number") @db.VarChar(11)
  zipcode         String?  @db.VarChar(6)
  address         String?  @db.VarChar(32)
  createdAt       DateTime @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime @map("updated_at") @db.Timestamp(6)
  purpose         String?  @db.VarChar(20)

  @@map("Addresses")
  @@index([cellPhoneNumber], map: "index_addresses_on_cell_phone_number")
  @@index([recordType, recordId, purpose], map: "index_addresses_on_record_type_and_record_id_and_purpose")
  @@map("addresses")
}

model AdminGroups {
  id         BigInt   @id @default(autoincrement())
  name       String?  @db.VarChar
  usersCount Int?     @default(0) @map("users_count")
  settings   Json?
  createdAt  DateTime @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamp(6)

  @@map("AdminGroups")
  @@map("admin_groups")
}

model Albums {
  id            BigInt    @id @default(autoincrement())
  userId        BigInt?
  viewCount     BigInt?   @default(0)
  photosCount   BigInt?   @default(0)
  commentsCount BigInt?   @default(0)
  name          String?   @db.VarChar(255)
  createdAt     DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime? @map("updated_at") @db.Timestamptz(6)
  password      String?   @db.VarChar(30)
  albumableType String?   @map("albumable_type") @db.VarChar(255)
  albumableId   BigInt?
  permission    Int?      @default(0) @db.SmallInt
  description   String?   @db.VarChar(255)
  coverId       BigInt?

  @@map("Albums")
  @@index([albumableType, albumableId], map: "idx_24623_albumable")
  @@index([userId], map: "idx_24623_index_albums_on_user_id")
  @@index([viewCount], map: "idx_24623_index_albums_on_view_count")
  @@map("albums")
}

model Anchors {
  id             BigInt    @id @default(autoincrement())
  nickname       String?   @db.VarChar(191)
  realname       String?   @db.VarChar(191)
  birthday       DateTime? @db.Date
  height         Float?
  weight         Float?
  description    String?
  createdAt      DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime  @map("updated_at") @db.Timestamptz(6)
  favoritesCount BigInt?   @default(0)
  visitsCount    BigInt?   @default(0)
  commentsCount  BigInt?   @default(0)

  @@map("Anchors")
  @@map("anchors")
}

model AppNotifications {
  id        BigInt    @id @default(autoincrement())
  appId     BigInt?
  name      String?   @db.VarChar(255)
  params    String?
  createdAt DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("AppNotifications")
  @@map("app_notifications")
}

model AppUsers {
  id        BigInt    @id @default(autoincrement())
  userId    BigInt?
  appId     BigInt?
  createdAt DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("AppUsers")
  @@index([userId, appId], map: "idx_24679_index_app_users_on_user_id_and_app_id")
  @@map("app_users")
}

model Apps {
  id           BigInt    @id @default(autoincrement())
  name         String?   @db.VarChar(255)
  logoFileName String?   @map("logo_file_name") @db.VarChar(255)
  url          String?   @db.VarChar(255)
  apiUrl       String?   @map("api_url") @db.VarChar(255)
  key          String?   @db.VarChar(255)
  description  String?   @db.VarChar(255)
  secret       String?   @db.VarChar(255)
  userId       BigInt?
  createdAt    DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime? @map("updated_at") @db.Timestamptz(6)
  internal     Boolean?  @default(false)
  callCount    BigInt?   @default(0)
  usersCount   BigInt?   @default(0)
  state        String?   @default("normal") @db.VarChar(20)
  callbackUrl  String?   @map("callback_url") @db.VarChar(255)
  sid          String?   @db.VarChar(30)
  iframe       Boolean?  @default(false)

  @@map("Apps")
  @@index([key, secret], map: "idx_24650_index_apps_on_key_and_secret")
  @@index([userId], map: "idx_24650_index_apps_on_user_id")
  @@index([usersCount], map: "idx_24650_index_apps_on_users_count")
  @@map("apps")
}

model ArInternalMetadata {
  key       String   @id @db.VarChar
  value     String?  @db.VarChar
  createdAt DateTime @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @map("updated_at") @db.Timestamp(6)

  @@map("ArInternalMetadata")
  @@map("ar_internal_metadata")
}

model Articles {
  id                BigInt                   @id @default(autoincrement())
  title             String?                  @db.VarChar(255)
  userId            BigInt?
  src               String?                  @db.VarChar(255)
  srcUrl            String?                  @map("src_url") @db.VarChar(255)
  visitsCount       BigInt?                  @default(0)
  commentsCount     BigInt?                  @default(0)
  createdAt         DateTime                 @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime                 @map("updated_at") @db.Timestamptz(6)
  state             BigInt?                  @default(0)
  categoryId        BigInt?
  spiderId          String?                  @map("spider_id") @db.VarChar(255)
  picturesLocalized Boolean?                 @default(false) @map("pictures_localized")
  attachmentsCount  BigInt?                  @default(0)
  titlePinyin       String?                  @map("title_pinyin") @db.VarChar(255)
  articlableType    String?                  @map("articlable_type") @db.VarChar(255)
  articlableId      BigInt?
  redirectUrl       String?                  @map("redirect_url") @db.VarChar(191)
  expiresAt         DateTime?                @map("expires_at") @db.Timestamptz(6)
  favoritesCount    BigInt?                  @default(0)
  ip                String?                  @db.Inet
  textSearchable    Unsupported("tsvector")? @default(dbgenerated("to_tsvector('zhcfg'::regconfig, (COALESCE(title, ''::character varying))::text)"))

  @@map("Articles")
  @@index([textSearchable], map: "full_text_idx_for_articles", type: Gin)
  @@index([articlableType, articlableId], map: "idx_24684_articlable")
  @@index([categoryId], map: "idx_24684_index_articles_on_category_id")
  @@index([state], map: "idx_24684_index_articles_on_state")
  @@index([title], map: "idx_24684_index_articles_on_title")
  @@index([userId], map: "idx_24684_index_articles_on_user_id")
  @@map("articles")
}

model AssetProxies {
  id        BigInt    @id @default(autoincrement())
  url       String?
  mimeType  String?   @map("mime_type") @db.VarChar(191)
  userId    BigInt?
  hits      BigInt?
  md5       String?   @db.VarChar(32)
  size      BigInt?
  lastHitAt DateTime? @map("last_hit_at") @db.Timestamptz(6)
  createdAt DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @map("updated_at") @db.Timestamptz(6)

  @@map("AssetProxies")
  @@index([lastHitAt], map: "idx_24708_index_asset_proxies_on_last_hit_at")
  @@index([md5], map: "idx_24708_index_asset_proxies_on_md5")
  @@map("asset_proxies")
}

model Auditions {
  id            BigInt    @id @default(autoincrement())
  auditableId   BigInt?
  auditableType String?   @map("auditable_type") @db.VarChar(191)
  createdAt     DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime  @map("updated_at") @db.Timestamptz(6)
  state         BigInt?
  reason        String?   @db.VarChar(191)
  auditorId     BigInt?
  auditedAt     DateTime? @map("audited_at") @db.Timestamptz(6)

  @@map("Auditions")
  @@index([auditableId, auditableType], map: "idx_24717_auditable")
  @@map("auditions")
}

model Blacklists {
  id        BigInt    @id @default(autoincrement())
  userId    BigInt?
  badGuyId  BigInt?
  createdAt DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("Blacklists")
  @@index([badGuyId], map: "idx_24724_index_blacklists_on_bad_guy_id")
  @@index([userId], map: "idx_24724_index_blacklists_on_user_id")
  @@map("blacklists")
}

model Blogs {
  id               BigInt                   @id @default(autoincrement())
  title            String?                  @db.VarChar(255)
  tags             String?                  @db.VarChar(255)
  userId           BigInt?
  viewCount        BigInt?                  @default(0)
  content          String?
  createdAt        DateTime?                @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime?                @map("updated_at") @db.Timestamptz(6)
  commentsCount    BigInt?                  @default(0)
  categoryId       BigInt?
  permission       BigInt?                  @default(0)
  cachedTagList    String?                  @map("cached_tag_list") @db.VarChar(255)
  globalCategoryId BigInt?
  state            BigInt?                  @default(0)
  visitorsCount    BigInt?                  @default(0)
  format           BigInt?                  @default(0)
  disableComment   Boolean?                 @default(false) @map("disable_comment")
  favoritesCount   BigInt?                  @default(0)
  sid              String?                  @db.VarChar(48)
  redirectUrl      String?                  @map("redirect_url") @db.VarChar(191)
  ip               String?                  @db.Inet
  textSearchable   Unsupported("tsvector")? @default(dbgenerated("to_tsvector('zhcfg'::regconfig, (((title)::text || ' '::text) || content))"))

  @@map("Blogs")
  @@index([textSearchable], map: "full_text_idx_for_blogs", type: Gin)
  @@index([sid], map: "idx_24729_index_blogs_on_sid")
  @@index([userId], map: "idx_24729_index_blogs_on_user_id")
  @@index([viewCount], map: "idx_24729_index_blogs_on_view_count")
  @@map("blogs")
}

model BookFields {
  id                BigInt    @id @default(autoincrement())
  pages             BigInt?   @default(0)
  price             BigInt?   @default(0)
  publisherName     String?   @map("publisher_name") @db.VarChar(255)
  publishOn         DateTime? @map("publish_on") @db.Date
  isbn              String?   @db.VarChar(255)
  binding           String?   @db.VarChar(255)
  originalName      String?   @map("original_name") @db.VarChar(255)
  author            String?   @db.VarChar(255)
  translator        String?   @db.VarChar(255)
  catalog           String?
  createdAt         DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime  @map("updated_at") @db.Timestamptz(6)
  collectionSummary String?   @map("collection_summary")
  authorSummary     String?   @map("author_summary")
  collectionName    String?   @map("collection_name") @db.VarChar(255)
  subtitle          String?   @db.VarChar(255)

  @@map("BookFields")
  @@index([isbn], map: "idx_24749_index_book_fields_on_isbn")
  @@map("book_fields")
}

model BrandFields {
  id        BigInt   @id @default(autoincrement())
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("BrandFields")
  @@map("brand_fields")
}

model CartItems {
  id            BigInt   @id @default(autoincrement())
  userId        BigInt?
  amount        BigInt?
  shopId        BigInt?
  available     Boolean? @default(true)
  createdAt     DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @map("updated_at") @db.Timestamptz(6)
  orderableId   BigInt?
  orderableType String?  @map("orderable_type") @db.VarChar(191)
  isSelected    Boolean? @default(true) @map("is_selected")
  skuId         BigInt?
  itemId        BigInt?
  price         BigInt?
  totalPrice    BigInt?
  name          String?  @db.VarChar(191)

  @@map("CartItems")
  @@index([userId], map: "idx_24771_index_cart_items_on_user_id")
  @@index([orderableId, orderableType], map: "idx_24771_orderable")
  @@map("cart_items")
}

model CelebrityFields {
  id            BigInt    @id @default(autoincrement())
  sex           Int?      @db.SmallInt
  birthday      DateTime? @db.Date
  zodiac        Int?      @db.SmallInt
  chineseZodiac Int?      @map("chinese_zodiac") @db.SmallInt
  height        Int?
  weight        Int?
  englishName   String?   @map("english_name") @db.VarChar(100)
  bloodtype     Int?      @db.SmallInt
  createdAt     DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime  @map("updated_at") @db.Timestamptz(6)
  aliasName     String?   @map("alias_name") @db.VarChar(255)
  birthplace    String?   @db.VarChar(255)
  graduatedFrom String?   @map("graduated_from") @db.VarChar(255)
  spouse        String?   @db.VarChar(255)
  achievement   String?   @db.VarChar(255)
  job           String?   @db.VarChar(255)
  language      String?   @db.VarChar(255)
  deathday      DateTime? @db.Timestamptz(6)
  website       String?   @db.VarChar(255)
  otherCnNames  String?   @map("other_cn_names") @db.VarChar(255)
  otherEnNames  String?   @map("other_en_names") @db.VarChar(255)
  imdb          String?   @db.VarChar(255)

  @@map("CelebrityFields")
  @@map("celebrity_fields")
}

model ChatMessages {
  id         BigInt   @id @default(autoincrement())
  userId     BigInt?
  color      String?  @db.VarChar(7)
  isPrivate  Boolean? @default(true) @map("is_private")
  receiverId BigInt?
  toAll      Boolean? @default(false) @map("to_all")
  isBulletin Boolean? @default(false) @map("is_bulletin")
  content    String?
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)
  roomId     BigInt?
  action     String?  @db.VarChar(255)
  fontSize   BigInt?  @default(13)
  fontColor  String?  @default("#000000") @map("font_color") @db.VarChar(255)
  roomUserId BigInt?

  @@map("ChatMessages")
  @@index([receiverId], map: "idx_24799_index_chat_messages_on_receiver_id")
  @@index([roomId], map: "idx_24799_index_chat_messages_on_room_id")
  @@index([userId], map: "idx_24799_index_chat_messages_on_user_id")
  @@map("chat_messages")
}

model ChatRoomUsers {
  id        BigInt   @id @default(autoincrement())
  roomId    BigInt?
  userId    BigInt?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("ChatRoomUsers")
  @@map("chat_room_users")
}

model ChatRooms {
  id              BigInt   @id @default(autoincrement())
  name            String?  @db.VarChar(255)
  userId          BigInt?
  subject         String?  @db.VarChar(255)
  categoryId      BigInt?
  usersCount      BigInt?  @default(0)
  createdAt       DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime @map("updated_at") @db.Timestamptz(6)
  description     String?  @db.VarChar(255)
  picture         String?  @db.VarChar(255)
  pictureFileName String?  @map("picture_file_name") @db.VarChar(255)
  attachmentId    BigInt?

  @@map("ChatRooms")
  @@index([categoryId], map: "idx_24813_index_chat_rooms_on_category_id")
  @@index([userId], map: "idx_24813_index_chat_rooms_on_user_id")
  @@map("chat_rooms")
}

model CheckIns {
  id        BigInt    @id @default(autoincrement())
  userId    BigInt?
  credits   BigInt?   @default(0)
  createdAt DateTime? @map("created_at") @db.Timestamptz(6)

  @@map("CheckIns")
  @@index([userId], map: "idx_24831_index_check_ins_on_user_id")
  @@map("check_ins")
}

model CkeditorAssets {
  id              BigInt    @id @default(autoincrement())
  dataFileName    String    @map("data_file_name") @db.VarChar(255)
  dataContentType String?   @map("data_content_type") @db.VarChar(255)
  dataFileSize    BigInt?
  assetableId     BigInt?
  assetableType   String?   @map("assetable_type") @db.VarChar(30)
  type            String?   @db.VarChar(25)
  guid            String?   @db.VarChar(10)
  locale          Int?      @default(0) @db.SmallInt
  userId          BigInt?
  createdAt       DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("CkeditorAssets")
  @@index([assetableType, assetableId], map: "idx_24837_fk_assetable")
  @@index([userId], map: "idx_24837_fk_user")
  @@index([assetableType, type, assetableId], map: "idx_24837_idx_assetable_type")
  @@map("ckeditor_assets")
}

model Claims {
  id            BigInt   @id @default(autoincrement())
  claimableId   BigInt?
  claimableType String?  @map("claimable_type") @db.VarChar(191)
  userId        BigInt?
  state         BigInt?
  evidence      String?
  createdAt     DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @map("updated_at") @db.Timestamptz(6)
  adminId       BigInt?

  @@map("Claims")
  @@index([claimableId, claimableType], map: "idx_24849_claimable")
  @@map("claims")
}

model ClientApplications {
  id              BigInt    @id @default(autoincrement())
  name            String?   @db.VarChar(255)
  url             String?   @db.VarChar(255)
  supportUrl      String?   @map("support_url") @db.VarChar(255)
  callbackUrl     String?   @map("callback_url") @db.VarChar(255)
  key             String?   @unique(map: "idx_24857_index_client_applications_on_key") @db.VarChar(40)
  secret          String?   @db.VarChar(40)
  userId          BigInt?
  createdAt       DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime? @map("updated_at") @db.Timestamptz(6)
  iconFileName    String?   @map("icon_file_name") @db.VarChar(255)
  iconContentType String?   @map("icon_content_type") @db.VarChar(255)
  iconFileSize    BigInt?
  iconUpdatedAt   DateTime? @map("icon_updated_at") @db.Timestamptz(6)

  @@map("ClientApplications")
  @@map("client_applications")
}

model Comments {
  id              BigInt    @id @default(autoincrement())
  content         String?
  commentableType String?   @map("commentable_type") @db.VarChar(32)
  commentableId   BigInt?
  userId          BigInt?
  updatedAt       DateTime? @map("updated_at") @db.Timestamptz(6)
  createdAt       DateTime? @map("created_at") @db.Timestamptz(6)
  favoritesCount  BigInt?   @default(0)
  replyToId       BigInt?
  replyToUserId   BigInt?
  parentId        BigInt?
  repliesCount    BigInt?   @default(0)
  score           BigInt?   @default(0)
  ip              String?   @db.Inet

  @@map("Comments")
  @@index([commentableId, commentableType], map: "idx_24872_index_comments_on_commentable")
  @@index([parentId], map: "idx_24872_index_comments_on_parent_id")
  @@index([userId], map: "idx_24872_index_comments_on_user_id")
  @@map("comments")
}

model Communities {
  id            BigInt   @id @default(autoincrement())
  creatorId     BigInt?
  usersCount    BigInt?
  name          String?  @db.VarChar(191)
  address       String?  @db.VarChar(191)
  photosCount   BigInt?
  commentsCount BigInt?
  name2         String?  @db.VarChar(191)
  createdAt     DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("Communities")
  @@map("communities")
}

model Companies {
  id                 BigInt    @id @default(autoincrement())
  name               String?   @db.VarChar(64)
  tel                String?   @db.VarChar(20)
  tel2               String?   @db.VarChar(191)
  state              Int?      @db.SmallInt
  person             String?   @db.VarChar(10)
  registeredCapital  Float?    @map("registered_capital")
  registerOn         DateTime? @map("register_on") @db.Timestamptz(6)
  email              String?   @db.VarChar(64)
  uscc               String?   @db.VarChar(32)
  trn                String?   @db.VarChar(32)
  registrationNumber String?   @map("registration_number") @db.VarChar(32)
  organizationCode   String?   @map("organization_code") @db.VarChar(32)
  employeesCount     BigInt?   @default(0)
  companyType        String?   @default("") @map("company_type") @db.VarChar(64)
  business           String?   @db.VarChar(32)
  url                String?   @db.VarChar(255)
  address            String?   @db.VarChar(191)
  businessScope      String?   @map("business_scope")
  createdAt          DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime  @map("updated_at") @db.Timestamptz(6)

  @@map("Companies")
  @@index([address], map: "idx_24894_index_companies_on_address")
  @@index([name], map: "idx_24894_index_companies_on_name")
  @@index([person], map: "idx_24894_index_companies_on_person")
  @@map("companies")
}

model Complaints {
  id         BigInt   @id @default(autoincrement())
  recordId   BigInt?
  recordType String?  @map("record_type") @db.VarChar(255)
  url        String?  @db.VarChar(255)
  userId     BigInt?
  summary    String?
  status     Int?     @default(0) @db.SmallInt
  adminId    BigInt?
  result     String?
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)
  categoryId BigInt?  @default(0)

  @@map("Complaints")
  @@index([recordId, recordType], map: "idx_24915_complaintable")
  @@index([adminId], map: "idx_24915_index_complaints_on_admin_id")
  @@index([status], map: "idx_24915_index_complaints_on_status")
  @@index([userId], map: "idx_24915_index_complaints_on_user_id")
  @@map("complaints")
}

model ConsumerTokens {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt?
  type      String?  @db.VarChar(30)
  token     String?  @unique(map: "idx_24926_index_consumer_tokens_on_token") @db.VarChar(255)
  secret    String?  @db.VarChar(255)
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("ConsumerTokens")
  @@map("consumer_tokens")
}

model Coupons {
  id               BigInt    @id @default(autoincrement())
  expiresAt        DateTime? @map("expires_at") @db.Timestamptz(6)
  discount         BigInt?
  userId           BigInt?
  sn               String?   @db.VarChar(191)
  acquiredAt       DateTime? @map("acquired_at") @db.Timestamptz(6)
  value            BigInt?
  createdAt        DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime  @map("updated_at") @db.Timestamptz(6)
  factoryId        BigInt?
  categoryId       BigInt?
  itemIds          String?   @map("item_ids")
  validDays        BigInt?
  releaseBeginAt   DateTime? @map("release_begin_at") @db.Timestamptz(6)
  releaseEndAt     DateTime? @map("release_end_at") @db.Timestamptz(6)
  maxPerUser       BigInt?   @default(1)
  validBeginAt     DateTime? @map("valid_begin_at") @db.Timestamptz(6)
  validEndAt       DateTime? @map("valid_end_at") @db.Timestamptz(6)
  validType        BigInt?   @default(0)
  couponType       BigInt?
  maxReleaseCount  Int?      @default(0) @map("max_release_count")
  userCouponsCount Int?      @default(0) @map("user_coupons_count")
  name             String?   @db.VarChar(191)
  over             BigInt?
  description      String?   @db.VarChar(191)
  categoryIds      String?   @map("category_ids")

  @@map("Coupons")
  @@map("coupons")
}

model Couriers {
  id         BigInt   @id @default(autoincrement())
  realname   String?  @db.VarChar(191)
  telephone  String?  @db.VarChar(191)
  telephone2 String?  @db.VarChar(191)
  userId     BigInt?
  latitude   Float?
  longitude  Float?
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)
  shopId     BigInt?

  @@map("Couriers")
  @@index([userId], map: "idx_24948_index_couriers_on_user_id")
  @@map("couriers")
}

model CreationLogs {
  id            BigInt   @id @default(autoincrement())
  creatableType String?  @map("creatable_type") @db.VarChar(255)
  creatableId   BigInt?
  url           String?
  data          String?
  createdAt     DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @map("updated_at") @db.Timestamptz(6)
  urlMd5        String?  @map("url_md5") @db.VarChar(32)

  @@map("CreationLogs")
  @@index([creatableId, creatableType], map: "idx_24958_creatable")
  @@index([urlMd5], map: "idx_24958_index_creation_logs_on_url_md5")
  @@map("creation_logs")
}

model CreditHistories {
  id            BigInt    @id @default(autoincrement())
  credits       BigInt?
  userId        BigInt?
  creditsTotal  BigInt?
  createdAt     DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime? @map("updated_at") @db.Timestamptz(6)
  creditType    String?   @map("credit_type") @db.VarChar(255)
  action        String?   @db.VarChar(255)
  actionClass   String?   @map("action_class") @db.VarChar(255)
  count         BigInt?   @default(0)
  lastProcessAt DateTime? @map("last_process_at") @db.Timestamptz(6)
  todayCount    BigInt?   @default(0)
  creditRuleId  BigInt?
  startAt       DateTime? @map("start_at") @db.Timestamptz(6)
  cycleCount    BigInt?   @default(0)
  totalCount    BigInt?   @default(0)

  @@map("CreditHistories")
  @@index([createdAt], map: "idx_24967_index_credit_histories_on_created_at")
  @@index([creditRuleId], map: "idx_24967_index_credit_histories_on_credit_rule_id")
  @@index([userId], map: "idx_24967_index_credit_histories_on_user_id")
  @@map("credit_histories")
}

model CreditLogs {
  id            BigInt    @id @default(autoincrement())
  amount        BigInt?   @default(0)
  note          String?   @db.VarChar(191)
  creditType    Int?      @default(0) @map("credit_type") @db.SmallInt
  userId        BigInt?
  createdAt     DateTime? @map("created_at") @db.Timestamptz(6)
  balanceBefore BigInt?   @default(0)
  balanceAfter  BigInt?   @default(0)

  @@map("CreditLogs")
  @@index([createdAt], map: "idx_24981_index_credit_logs_on_created_at")
  @@index([userId], map: "idx_24981_index_credit_logs_on_user_id")
  @@map("credit_logs")
}

model CreditRules {
  id             BigInt    @id @default(autoincrement())
  name           String?   @db.VarChar(50)
  action         String?   @db.VarChar(255)
  creditsNumber  BigInt?   @default(0)
  experience     BigInt?   @default(0)
  noRepeat       Int?      @default(0) @map("no_repeat") @db.SmallInt
  createdAt      DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime? @map("updated_at") @db.Timestamptz(6)
  creditType     String?   @map("credit_type") @db.VarChar(255)
  daysPerCycle   Int?      @map("days_per_cycle")
  numberPerCycle BigInt?
  credits        BigInt?   @default(0)

  @@map("CreditRules")
  @@map("credit_rules")
}

model DealSources {
  id         BigInt   @id @default(autoincrement())
  name       String?  @db.VarChar(191)
  url        String?  @db.VarChar(191)
  dealsCount BigInt?
  unionId    String?  @map("union_id") @db.VarChar(191)
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("DealSources")
  @@map("deal_sources")
}

model Deals {
  id             BigInt                   @id @default(autoincrement())
  price          BigInt?
  originalPrice  BigInt?
  userId         BigInt?
  name           String?                  @db.VarChar(191)
  description    String?
  createdAt      DateTime                 @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime                 @map("updated_at") @db.Timestamptz(6)
  categoryId     BigInt?
  expiresAt      DateTime?                @map("expires_at") @db.Timestamptz(6)
  state          BigInt?
  startAt        DateTime?                @map("start_at") @db.Timestamptz(6)
  endAt          DateTime?                @map("end_at") @db.Timestamptz(6)
  visitsCount    BigInt?                  @default(0)
  commentsCount  BigInt?                  @default(0)
  discount       Int?
  sourceId       BigInt?
  excerpt        String?
  salesCount     BigInt?                  @default(0)
  expired        Boolean?                 @default(false)
  ip             String?                  @db.Inet
  textSearchable Unsupported("tsvector")? @default(dbgenerated("to_tsvector('zhcfg'::regconfig, (((COALESCE(name, ''::character varying))::text || ' '::text) || description))"))

  @@map("Deals")
  @@index([textSearchable], map: "full_text_idx_for_deals", type: Gin)
  @@index([categoryId], map: "idx_25005_index_deals_on_category_id")
  @@index([price], map: "idx_25005_index_deals_on_price")
  @@index([userId], map: "idx_25005_index_deals_on_user_id")
  @@index([startAt, endAt], map: "idx_25005_timerange")
  @@map("deals")
}

model Decisions {
  id        BigInt    @id @default(autoincrement())
  userId    BigInt?
  status    Int?      @db.SmallInt
  rootUrl   String?   @map("root_url") @db.VarChar(255)
  createdAt DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("Decisions")
  @@index([userId], map: "idx_25028_index_decisions_on_user_id")
  @@map("decisions")
}

model DelayedJobs {
  id        BigInt    @id @default(autoincrement())
  priority  BigInt?   @default(0)
  attempts  BigInt?   @default(0)
  handler   String?
  lastError String?   @map("last_error")
  runAt     DateTime? @map("run_at") @db.Timestamptz(6)
  lockedAt  DateTime? @map("locked_at") @db.Timestamptz(6)
  failedAt  DateTime? @map("failed_at") @db.Timestamptz(6)
  lockedBy  String?   @map("locked_by") @db.VarChar(255)
  queue     String?   @db.VarChar(255)
  createdAt DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @map("updated_at") @db.Timestamptz(6)

  @@map("DelayedJobs")
  @@index([priority, runAt], map: "idx_25034_delayed_jobs_priority")
  @@map("delayed_jobs")
}

model DeliveryCompanies {
  id         BigInt   @id @default(autoincrement())
  name       String?  @db.VarChar(191)
  tel        String?  @db.VarChar(191)
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)
  namePinyin String?  @map("name_pinyin") @db.VarChar(191)

  @@map("DeliveryCompanies")
  @@map("delivery_companies")
}

model Doings {
  id        BigInt    @id @default(autoincrement())
  status    String?   @db.VarChar(255)
  userId    BigInt?
  replyToId BigInt?
  createdAt DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("Doings")
  @@map("doings")
}

model DramaFields {
  id            BigInt    @id @default(autoincrement())
  imdb          String?   @db.VarChar(255)
  website       String?   @db.VarChar(255)
  language      String?   @db.VarChar(255)
  aliasName     String?   @map("alias_name") @db.VarChar(255)
  countryId     BigInt?
  length        BigInt?
  releaseOn     DateTime? @map("release_on") @db.Date
  createdAt     DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime  @map("updated_at") @db.Timestamptz(6)
  status        Int?      @db.SmallInt
  station       String?   @db.VarChar(255)
  season        Int?      @db.SmallInt
  lastEpisodeId BigInt?

  @@map("DramaFields")
  @@map("drama_fields")
}

model Emails {
  id              BigInt    @id @default(autoincrement())
  from            String?   @db.VarChar(255)
  to              String?   @db.VarChar(255)
  lastSendAttempt BigInt?   @default(0)
  mail            String?
  createdOn       DateTime? @map("created_on") @db.Timestamptz(6)
  priority        BigInt?

  @@map("Emails")
  @@map("emails")
}

model EpisodeFields {
  id        BigInt    @id @default(autoincrement())
  title     String?   @db.VarChar(255)
  createdAt DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)
  season    BigInt?   @default(1)
  episode   BigInt?   @default(1)

  @@map("EpisodeFields")
  @@map("episode_fields")
}

model ExtraAttributes {
  id         BigInt    @id @default(autoincrement())
  value      Json?
  expiresAt  DateTime? @map("expires_at") @db.Timestamp(6)
  recordId   Int?      @map("record_id")
  recordType String?   @map("record_type") @db.VarChar
  createdAt  DateTime  @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime  @map("updated_at") @db.Timestamp(6)
  name       String?   @default("") @db.VarChar
  note       String?   @db.VarChar

  @@map("ExtraAttributes")
  @@index([expiresAt], map: "index_extra_attributes_on_expires_at")
  @@index([name], map: "index_extra_attributes_on_name")
  @@index([recordId, recordType], map: "record")
  @@map("extra_attributes")
}

model Fans {
  id         BigInt   @id @default(autoincrement())
  recordId   Int?     @map("record_id")
  recordType String?  @map("record_type") @db.VarChar
  userId     Int?     @map("user_id")
  createdAt  DateTime @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamp(6)

  @@map("Fans")
  @@index([recordId, recordType], map: "index_fans_on_record_id_and_record_type")
  @@map("fans")
}

model Favorites {
  id              BigInt   @id @default(autoincrement())
  userId          BigInt?
  favoritableId   BigInt?
  favoritableType String?  @map("favoritable_type") @db.VarChar(32)
  remark          String?  @db.VarChar(191)
  createdAt       DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime @map("updated_at") @db.Timestamptz(6)
  title           String?  @db.VarChar(191)
  url             String?

  @@map("Favorites")
  @@index([favoritableId, favoritableType], map: "idx_25104_favirotable")
  @@index([userId], map: "idx_25104_index_favorites_on_user_id")
  @@map("favorites")
}

model Feeds {
  id              BigInt    @id @default(autoincrement())
  actorId         BigInt?
  appId           BigInt?
  createdAt       DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime? @map("updated_at") @db.Timestamptz(6)
  userId          BigInt?
  titleData       Json?     @default("{}")
  bodyData        Json?     @default("{}")
  titleTemplateId Int?      @map("title_template_id")
  bodyTemplateId  Int?      @map("body_template_id")
  feedableId      Int?      @map("feedable_id")
  feedableType    String?   @map("feedable_type") @db.VarChar

  @@map("Feeds")
  @@index([feedableId, feedableType], map: "feedable")
  @@index([actorId], map: "idx_25114_index_feeds_on_actor_id")
  @@index([appId], map: "idx_25114_index_feeds_on_app_id")
  @@index([userId], map: "idx_25114_index_feeds_on_user_id")
  @@index([bodyData], map: "index_feeds_on_body_data", type: Gin)
  @@index([titleData], map: "index_feeds_on_title_data", type: Gin)
  @@map("feeds")
}

model FormFieldRecords {
  id           BigInt   @id @default(autoincrement())
  formId       BigInt?
  formFieldId  BigInt?
  userId       BigInt?
  value        String?
  createdAt    DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @map("updated_at") @db.Timestamptz(6)
  formRecordId BigInt?

  @@map("FormFieldRecords")
  @@index([formFieldId], map: "idx_25155_index_form_field_records_on_form_field_id")
  @@index([formId], map: "idx_25155_index_form_field_records_on_form_id")
  @@index([userId], map: "idx_25155_index_form_field_records_on_user_id")
  @@map("form_field_records")
}

model FormFields {
  id           BigInt   @id @default(autoincrement())
  name         String?  @db.VarChar(191)
  valueType    BigInt?
  required     Boolean?
  maxLength    BigInt?
  minLength    BigInt?
  options      String?
  formId       BigInt?
  createdAt    DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @map("updated_at") @db.Timestamptz(6)
  multiple     Boolean? @default(false)
  description  String?  @default("") @db.VarChar(191)
  defaultValue String?  @default("") @map("default_value") @db.VarChar(191)
  isReadonly   Boolean? @default(false) @map("is_readonly")
  maxSelect    BigInt?
  key          String?  @db.VarChar(191)
  position     BigInt?  @default(0)
  placeholder  String?  @db.VarChar(191)
  minValue     Float?   @map("min_value")
  maxValue     Float?   @map("max_value")
  prefix       String?  @db.VarChar(191)
  append       String?  @db.VarChar(191)
  format       String?  @db.VarChar(191)

  @@map("FormFields")
  @@index([formId], map: "idx_25137_index_form_fields_on_form_id")
  @@map("form_fields")
}

model FormRecords {
  id         BigInt   @id @default(autoincrement())
  formId     BigInt?
  userId     BigInt?
  value      String?
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)
  recordId   BigInt?
  recordType String?  @map("record_type") @db.VarChar(191)

  @@map("FormRecords")
  @@index([formId], map: "idx_25162_index_form_records_on_form_id")
  @@index([userId], map: "idx_25162_index_form_records_on_user_id")
  @@index([recordId, recordType], map: "idx_25162_object")
  @@map("form_records")
}

model Forms {
  id           BigInt    @id @default(autoincrement())
  name         String?   @db.VarChar(191)
  userId       BigInt?
  fieldsCount  BigInt?
  description  String?
  createdAt    DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime  @map("updated_at") @db.Timestamptz(6)
  recordsCount BigInt?   @default(0)
  validSince   DateTime? @map("valid_since") @db.Timestamptz(6)
  validUntil   DateTime? @map("valid_until") @db.Timestamptz(6)
  maxPerUser   BigInt?   @default(1)

  @@map("Forms")
  @@index([userId], map: "idx_25127_index_forms_on_user_id")
  @@map("forms")
}

model FreightRules {
  id                 BigInt   @id @default(autoincrement())
  freightTemplateId  BigInt?
  fee                BigInt?
  amount             BigInt?  @default(1)
  amountPerStep      BigInt?  @default(1)
  feePerStep         BigInt?
  locationIds        String?  @map("location_ids")
  isFreeShipping     Boolean? @default(false) @map("is_free_shipping")
  freeShippingAmount BigInt?  @default(0)
  freeShippingUnit   BigInt?
  createdAt          DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime @map("updated_at") @db.Timestamptz(6)
  default            Boolean? @default(false)
  ruleType           Int?     @default(1) @map("rule_type") @db.SmallInt

  @@map("FreightRules")
  @@index([freightTemplateId], map: "idx_25170_index_freight_rules_on_freight_template_id")
  @@map("freight_rules")
}

model FreightTemplates {
  id                    BigInt   @id @default(autoincrement())
  name                  String?  @db.VarChar(191)
  userId                BigInt?
  createdAt             DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt             DateTime @map("updated_at") @db.Timestamptz(6)
  restrictedLocationIds String?  @map("restricted_location_ids")
  stepBy                BigInt?  @default(0)
  freightType           BigInt?  @default(0)
  shippingLocationId    BigInt?
  fee                   BigInt?

  @@map("FreightTemplates")
  @@map("freight_templates")
}

model FriendGroups {
  id            BigInt   @id @default(autoincrement())
  groupId       BigInt?
  friendGroupId BigInt?
  userId        BigInt?
  createdAt     DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("FriendGroups")
  @@map("friend_groups")
}

model FriendshipRequests {
  id          BigInt   @id @default(autoincrement())
  userId      BigInt?
  requesterId BigInt?
  note        String?  @db.VarChar(191)
  action      String?  @db.VarChar(15)
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("FriendshipRequests")
  @@map("friendship_requests")
}

model Friendships {
  id               BigInt    @id @default(autoincrement())
  userId           BigInt?
  friendId         BigInt?
  createdAt        DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime? @map("updated_at") @db.Timestamptz(6)
  note             String?   @db.VarChar(255)
  state            Int?      @default(0) @db.SmallInt
  messageSessionId BigInt?
  sessionId        BigInt?
  requestId        BigInt?
  remark           String?   @db.VarChar(191)

  @@map("Friendships")
  @@index([userId, friendId], map: "idx_25193_index_friendships_on_user_id_and_friend_id")
  @@map("friendships")
}

model Geolocations {
  id         BigInt   @id @default(autoincrement())
  lat        Decimal? @db.Decimal(15, 10)
  lng        Decimal? @db.Decimal(15, 10)
  address    String?  @db.VarChar(191)
  recordId   BigInt?
  recordType String?  @map("record_type") @db.VarChar(191)
  locationId BigInt?
  userId     BigInt?
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("Geolocations")
  @@index([recordId, recordType], map: "idx_25213_object")
  @@map("geolocations")
}

model GiftCards {
  id        BigInt    @id @default(autoincrement())
  code      String?   @db.VarChar(191)
  value     BigInt?
  expiresAt DateTime? @map("expires_at") @db.Timestamptz(6)
  ownerId   BigInt?
  createdAt DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @map("updated_at") @db.Timestamptz(6)

  @@map("GiftCards")
  @@map("gift_cards")
}

model Gifts {
  id          BigInt    @id @default(autoincrement())
  userId      BigInt?
  acquiredAt  DateTime? @map("acquired_at") @db.Timestamptz(6)
  encryptedId String?   @map("encrypted_id") @db.VarChar(191)
  prize       String?   @db.VarChar(191)
  createdAt   DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @map("updated_at") @db.Timestamptz(6)
  itemId      BigInt?
  operatorId  BigInt?

  @@map("Gifts")
  @@map("gifts")
}

model Goods {
  id          BigInt   @id @default(autoincrement())
  name        String?  @db.VarChar(255)
  price       Float?
  userId      BigInt?
  shopId      BigInt?
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)
  goodsNo     String?  @map("goods_no") @db.VarChar(64)
  description String?
  extra       Json?    @default("{}")

  @@map("Goods")
  @@index([name], map: "idx_25235_index_goods_on_name")
  @@index([price], map: "idx_25235_index_goods_on_price")
  @@index([shopId], map: "idx_25235_index_goods_on_shop_id")
  @@index([userId], map: "idx_25235_index_goods_on_user_id")
  @@map("goods")
}

model GroupMessages {
  id        BigInt   @id @default(autoincrement())
  content   String?  @db.VarChar(191)
  groupId   BigInt?
  userId    BigInt?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("GroupMessages")
  @@map("group_messages")
}

model GroupPosts {
  id               BigInt                   @id @default(autoincrement())
  groupId          BigInt?
  topicId          BigInt?
  userId           BigInt?
  body             String?
  createdAt        DateTime?                @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime?                @map("updated_at") @db.Timestamptz(6)
  first            Boolean?                 @default(false)
  likesCount       BigInt?                  @default(0)
  replyToId        BigInt?
  floor            BigInt?                  @default(1)
  attachmentsCount BigInt?                  @default(0)
  textSearchable   Unsupported("tsvector")? @default(dbgenerated("to_tsvector('zhcfg'::regconfig, COALESCE(body, ''::text))"))

  @@map("GroupPosts")
  @@index([textSearchable], map: "full_text_idx_for_group_posts", type: Gin)
  @@index([groupId, topicId], map: "idx_25269_index_group_posts_on_group_id_and_topic_id")
  @@index([userId], map: "idx_25269_index_group_posts_on_user_id")
  @@map("group_posts")
}

model GroupTopicExtras {
  id        BigInt   @id @default(autoincrement())
  name      String?  @db.VarChar(191)
  topicId   BigInt?
  adminId   BigInt?
  note      String?  @db.VarChar(191)
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("GroupTopicExtras")
  @@map("group_topic_extras")
}

model GroupTopicUsers {
  id           BigInt   @id @default(autoincrement())
  groupTopicId BigInt?
  userId       BigInt?
  postsCount   BigInt?  @default(0)
  createdAt    DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("GroupTopicUsers")
  @@index([groupTopicId], map: "idx_25299_index_group_topic_users_on_group_topic_id")
  @@index([userId], map: "idx_25299_index_group_topic_users_on_user_id")
  @@map("group_topic_users")
}

model GroupTopics {
  id                 BigInt                   @id @default(autoincrement())
  subject            String?                  @db.VarChar(255)
  userId             BigInt?
  groupId            BigInt?
  postsCount         BigInt?                  @default(0)
  createdAt          DateTime?                @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime?                @map("updated_at") @db.Timestamptz(6)
  visitsCount        BigInt?                  @default(0)
  lastPostId         BigInt?
  participatorsCount BigInt?                  @default(0)
  lastRepliedAt      DateTime?                @map("last_replied_at") @db.Timestamptz(6)
  favoritesCount     BigInt?                  @default(0)
  nextFloor          BigInt?                  @default(1)
  attachmentsCount   BigInt?                  @default(0)
  textSearchable     Unsupported("tsvector")? @default(dbgenerated("to_tsvector('zhcfg'::regconfig, (COALESCE(subject, ''::character varying))::text)"))

  @@map("GroupTopics")
  @@index([textSearchable], map: "full_text_idx_for_group_topics", type: Gin)
  @@map("group_topics")
}

model GroupUsers {
  id          BigInt    @id @default(autoincrement())
  userId      BigInt?
  groupId     BigInt?
  level       BigInt?   @default(1)
  createdAt   DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @map("updated_at") @db.Timestamptz(6)
  state       BigInt?   @default(0)
  approvedAt  DateTime? @map("approved_at") @db.Timestamptz(6)
  reason      String?   @db.VarChar(255)
  topicsCount BigInt?   @default(0)
  postsCount  BigInt?   @default(0)
  inviterId   BigInt?

  @@map("GroupUsers")
  @@index([groupId], map: "idx_25305_index_group_users_on_group_id")
  @@map("group_users")
}

model Groups {
  id                BigInt                   @id @default(autoincrement())
  adminId           BigInt?
  usersCount        BigInt?                  @default(0)
  name              String?                  @db.VarChar(255)
  tags              String?                  @db.VarChar(255)
  createdAt         DateTime?                @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime?                @map("updated_at") @db.Timestamptz(6)
  description       String?                  @db.VarChar(255)
  avatarFileName    String?                  @map("avatar_file_name") @db.VarChar(255)
  topicsCount       BigInt?                  @default(0)
  postsCount        BigInt?                  @default(0)
  creatorId         BigInt?
  permission        BigInt?                  @default(0)
  approvedAt        DateTime?                @map("approved_at") @db.Timestamptz(6)
  normalUsersCount  BigInt?                  @default(0)
  pendingUsersCount BigInt?                  @default(0)
  categoryId        BigInt?
  discussableId     BigInt?
  discussableType   String?                  @map("discussable_type") @db.VarChar(255)
  attachmentId      BigInt?
  lastPostId        BigInt?
  lastTopicId       BigInt?
  todayTopicsCount  BigInt?                  @default(0)
  todayPostsCount   BigInt?                  @default(0)
  likesCount        BigInt?                  @default(0)
  memberTitle       String?                  @map("member_title") @db.VarChar(32)
  textSearchable    Unsupported("tsvector")? @default(dbgenerated("to_tsvector('zhcfg'::regconfig, (((name)::text || ' '::text) || (description)::text))"))

  @@map("Groups")
  @@index([textSearchable], map: "full_text_idx_for_groups", type: Gin)
  @@index([discussableId, discussableType], map: "idx_25241_discussable")
  @@index([usersCount], map: "idx_25241_index_groups_on_users_count")
  @@map("groups")
}

model HealthData {
  id          BigInt    @id @default(autoincrement())
  userId      BigInt?
  value       Float?
  description String?   @db.VarChar(255)
  type        String?   @db.VarChar(255)
  createdAt   DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @map("updated_at") @db.Timestamptz(6)
  measuredAt  DateTime? @map("measured_at") @db.Timestamptz(6)

  @@map("HealthData")
  @@map("health_data")
}

model Histories {
  id        BigInt    @id @default(autoincrement())
  userId    BigInt?
  content   String?
  createdAt DateTime? @map("created_at") @db.Timestamptz(6)
  trustRoot String?   @map("trust_root") @db.VarChar(255)

  @@map("Histories")
  @@index([userId], map: "idx_25324_index_histories_on_user_id")
  @@map("histories")
}

model Identities {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt?
  provider  String?  @db.VarChar(255)
  uid       String?  @db.VarChar(255)
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)
  info      String?
  token     String?  @db.VarChar(255)
  secret    String?  @db.VarChar(255)

  @@map("Identities")
  @@index([userId], map: "idx_25332_index_identities_on_user_id")
  @@map("identities")
}

model Invites {
  id          BigInt    @id @default(autoincrement())
  inviterId   BigInt?
  inviteeId   BigInt?
  email       String?   @db.VarChar(255)
  state       BigInt?   @default(0)
  emailSent   Boolean?  @map("email_sent")
  inviteeName String?   @map("invitee_name") @db.VarChar(255)
  createdAt   DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("Invites")
  @@map("invites")
}

model ItemAttrValues {
  id        BigInt   @id @default(autoincrement())
  value     String?  @db.VarChar
  attrId    Int?     @map("attr_id")
  createdAt DateTime @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @map("updated_at") @db.Timestamp(6)
  tmpid     String?  @db.VarChar
  name      String?  @db.VarChar(20)

  @@map("ItemAttrValues")
  @@index([attrId], map: "index_item_attr_values_on_attr_id")
  @@map("item_attr_values")
}

model ItemAttrs {
  id              BigInt   @id @default(autoincrement())
  name            String?  @db.VarChar(20)
  isImageRequired Boolean? @default(false) @map("is_image_required")
  index           Int?     @default(0) @db.SmallInt
  itemId          Int?     @map("item_id")
  shopId          Int?     @map("shop_id")
  createdAt       DateTime @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime @map("updated_at") @db.Timestamp(6)

  @@map("ItemAttrs")
  @@index([itemId], map: "index_item_attrs_on_item_id")
  @@map("item_attrs")
}

model ItemParams {
  id        BigInt   @id @default(autoincrement())
  group     String?  @db.VarChar(191)
  name      String?  @db.VarChar(191)
  value     String?  @db.VarChar(191)
  itemId    BigInt?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("ItemParams")
  @@index([itemId], map: "idx_25370_index_item_params_on_item_id")
  @@map("item_params")
}

model ItemSkus {
  id             BigInt   @id @default(autoincrement())
  price          BigInt?
  remark         String?  @db.VarChar(191)
  stockQuantity  BigInt?
  codebar        String?  @db.VarChar(191)
  createdAt      DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime @map("updated_at") @db.Timestamptz(6)
  itemId         BigInt?
  soldCount      BigInt?  @default(0)
  favoritesCount BigInt?  @default(0)
  weight         BigInt?
  attrValueIds   Int[]    @default([]) @map("attr_value_ids")

  @@map("ItemSkus")
  @@map("item_skus")
}

model Items {
  id                BigInt   @id @default(autoincrement())
  name              String?  @db.VarChar(191)
  amount            BigInt?
  createdAt         DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime @map("updated_at") @db.Timestamptz(6)
  userId            BigInt?
  categoryId        BigInt?
  state             BigInt?
  shopId            BigInt?
  itemNumber        String?  @map("item_number") @db.VarChar(32)
  sid               String?  @db.VarChar(32)
  stockQuantity     BigInt?  @default(0)
  soldCount         BigInt?  @default(0)
  favoritesCount    BigInt?  @default(0)
  logisticRequired  Boolean? @default(true) @map("logistic_required")
  originalPrice     BigInt?
  visitsCount       BigInt?  @default(0)
  promiseSendTime   BigInt?
  deliveryInHours   BigInt?
  freightTemplateId BigInt?
  modelId           BigInt?
  modelRecordId     BigInt?
  price             BigInt?
  weight            BigInt?
  monthSoldCount    BigInt?  @default(0)
  isForSale         Boolean? @default(true) @map("is_for_sale")
  score             Float?
  reviewsCount      BigInt?  @default(0)
  params            Json?    @default("{}")

  @@map("Items")
  @@index([shopId], map: "idx_25353_index_items_on_shop_id")
  @@index([sid], map: "idx_25353_index_items_on_sid")
  @@index([state], map: "idx_25353_index_items_on_state")
  @@index([params], map: "index_items_on_params", type: Gin)
  @@map("items")
}

model Likes {
  id          BigInt   @id @default(autoincrement())
  likableId   BigInt?
  likableType String?  @map("likable_type") @db.VarChar(255)
  usersCount  BigInt?
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)
  userId      BigInt?

  @@map("Likes")
  @@index([userId], map: "idx_25394_index_likes_on_user_id")
  @@index([usersCount], map: "idx_25394_index_likes_on_users_count")
  @@index([likableId, likableType], map: "idx_25394_likeable")
  @@map("likes")
}

model Linkings {
  id           BigInt   @id @default(autoincrement())
  linkableId   BigInt?
  linkableType String?  @map("linkable_type") @db.VarChar(191)
  linkId       BigInt?
  userId       BigInt?
  visitsCount  BigInt?  @default(0)
  createdAt    DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("Linkings")
  @@index([linkId], map: "idx_25400_index_linkings_on_link_id")
  @@index([userId], map: "idx_25400_index_linkings_on_user_id")
  @@index([linkableId, linkableType], map: "idx_25400_linkable")
  @@map("linkings")
}

model Links {
  id           BigInt   @id @default(autoincrement())
  linkableId   BigInt?
  linkableType String?  @map("linkable_type") @db.VarChar(255)
  type         String?  @db.VarChar(255)
  url          String?
  viewCount    BigInt?  @default(0)
  userId       BigInt?
  createdAt    DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @map("updated_at") @db.Timestamptz(6)
  password     String?  @db.VarChar
  size         Int?
  fingerprint  String?  @db.VarChar
  groupName    String?  @map("group_name") @db.VarChar
  name         String?  @db.VarChar
  shortUrl     String?  @map("short_url") @db.VarChar(32)
  linkableName String?  @map("linkable_name") @db.VarChar(20)
  extra        Json?    @default("{}") @db.Json

  @@map("Links")
  @@index([linkableType, linkableId], map: "idx_25407_linkable")
  @@index([shortUrl], map: "index_links_on_short_url")
  @@map("links")
}

model ListItems {
  id           BigInt   @id @default(autoincrement())
  title        String?  @db.VarChar(191)
  listableId   BigInt?
  listableType String?  @map("listable_type") @db.VarChar(191)
  userId       BigInt?
  reason       String?
  position     BigInt?  @default(0)
  createdAt    DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @map("updated_at") @db.Timestamptz(6)
  listId       Int?     @map("list_id")

  @@map("ListItems")
  @@index([userId], map: "idx_25426_index_list_items_on_user_id")
  @@index([listableId, listableType], map: "idx_25426_listable")
  @@index([listId], map: "index_list_items_on_list_id")
  @@map("list_items")
}

model Lists {
  id           BigInt   @id @default(autoincrement())
  name         String?  @db.VarChar(191)
  userId       BigInt?
  itemsCount   BigInt?  @default(0)
  description  String?
  createdAt    DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @map("updated_at") @db.Timestamptz(6)
  listableType String?  @map("listable_type") @db.VarChar(32)

  @@map("Lists")
  @@map("lists")
}

model LiveStreams {
  id              BigInt   @id @default(autoincrement())
  platformId      BigInt?
  anchorId        BigInt?
  createdAt       DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime @map("updated_at") @db.Timestamptz(6)
  title           String?  @db.VarChar(191)
  categoryId      BigInt?
  hot             BigInt?  @default(0)
  commentsCount   BigInt?  @default(0)
  subscribesCount Int?     @default(0) @map("subscribes_count")
  streaming       Boolean? @default(false)

  @@map("LiveStreams")
  @@index([anchorId], map: "idx_25436_index_live_streams_on_anchor_id")
  @@index([categoryId], map: "idx_25436_index_live_streams_on_category_id")
  @@map("live_streams")
}

model Locations {
  id              BigInt    @id @default(autoincrement())
  name            String?   @db.VarChar(255)
  ancestry        String?   @db.VarChar(255)
  ancestryDepth   BigInt?
  position        BigInt?
  createdAt       DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime? @map("updated_at") @db.Timestamptz(6)
  usersCount      BigInt?   @default(0)
  pictureFileName String?   @map("picture_file_name") @db.VarChar(255)
  groupId         BigInt?
  pinyin          String?   @db.VarChar(255)
  description     String?   @db.VarChar(255)
  lat             Float?
  lng             Float?
  googlePlaceId   String?   @map("google_place_id") @db.VarChar(255)
  formattedName   String?   @map("formatted_name") @db.VarChar(255)
  postalCode      String?   @map("postal_code") @db.VarChar(255)
  sid             String?   @db.VarChar(32)
  childrenCount   BigInt?   @default(0)

  @@map("Locations")
  @@index([sid], map: "idx_25448_index_locations_on_sid")
  @@map("locations")
}

model LoginLogs {
  id        BigInt    @id @default(autoincrement())
  username  String?   @db.VarChar(255)
  email     String?   @db.VarChar(255)
  success   Boolean?  @default(true)
  ip        String?   @db.VarChar(15)
  password  String?   @db.VarChar(255)
  userId    BigInt?
  createdAt DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)
  loginFrom String?   @map("login_from") @db.VarChar(255)

  @@map("LoginLogs")
  @@index([userId], map: "idx_25466_index_login_logs_on_user_id")
  @@map("login_logs")
}

model Logistics {
  id                  BigInt    @id @default(autoincrement())
  expressNo           String?   @map("express_no") @db.VarChar(191)
  consigneeRealname   String?   @map("consignee_realname") @db.VarChar(191)
  consigneeTelephone  String?   @map("consignee_telephone") @db.VarChar(191)
  consigneeTelephone2 String?   @map("consignee_telephone2") @db.VarChar(191)
  consigneeAddress    String?   @map("consignee_address") @db.VarChar(191)
  consigneeZip        String?   @map("consignee_zip") @db.VarChar(191)
  logisticType        BigInt?
  logisticsId         String?   @map("logistics_id") @db.VarChar(191)
  fee                 BigInt?
  agencyFee           BigInt?
  deliveryAmount      BigInt?
  state               BigInt?
  settlementState     BigInt?
  lastResult          String?   @map("last_result") @db.VarChar(191)
  result              String?   @db.VarChar(191)
  settleAt            DateTime? @map("settle_at") @db.Timestamptz(6)
  reconciliationState BigInt?
  reconciliateAt      DateTime? @map("reconciliate_at") @db.Timestamptz(6)
  createdAt           DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt           DateTime  @map("updated_at") @db.Timestamptz(6)
  logisticableId      BigInt?
  logisticableType    String?   @map("logisticable_type") @db.VarChar(32)
  userId              BigInt?
  publicUid           String?   @map("public_uid") @db.VarChar(12)
  courierId           BigInt?
  userAddressId       BigInt?
  orderId             BigInt?
  locationId          BigInt?

  @@map("Logistics")
  @@index([courierId], map: "idx_25479_index_logistics_on_courier_id")
  @@index([publicUid], map: "idx_25479_index_logistics_on_public_uid")
  @@index([logisticableId, logisticableType], map: "idx_25479_logisticable")
  @@map("logistics")
}

model Logs {
  id           BigInt   @id @default(autoincrement())
  loggableId   BigInt?
  loggableType String?  @map("loggable_type") @db.VarChar(191)
  userId       BigInt?
  data         Json?    @default("{}")
  key          String?  @db.VarChar(191)
  message      String?  @db.VarChar(191)
  action       String?  @db.VarChar(191)
  createdAt    DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @map("updated_at") @db.Timestamptz(6)
  level        Int?     @db.SmallInt

  @@map("Logs")
  @@index([action], map: "idx_25497_index_logs_on_action")
  @@index([key], map: "idx_25497_index_logs_on_key")
  @@index([level], map: "idx_25497_index_logs_on_level")
  @@index([userId], map: "idx_25497_index_logs_on_user_id")
  @@index([loggableId, loggableType], map: "idx_25497_loggable")
  @@index([data], map: "index_logs_on_data", type: Gin)
  @@map("logs")
}

model LotteryCommodities {
  id        BigInt   @id @default(autoincrement())
  itemId    BigInt?
  periodId  BigInt?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)
  userId    BigInt?
  title     String?  @db.VarChar(191)
  grade     BigInt?  @default(3)

  @@map("LotteryCommodities")
  @@map("lottery_commodities")
}

model LotteryPeriods {
  id            BigInt    @id @default(autoincrement())
  number        BigInt?
  description   String?
  startAt       DateTime? @map("start_at") @db.Timestamptz(6)
  endAt         DateTime? @map("end_at") @db.Timestamptz(6)
  state         BigInt?
  createdAt     DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime  @map("updated_at") @db.Timestamptz(6)
  userId        BigInt?
  title         String?   @db.VarChar(191)
  winningNumber String?   @map("winning_number") @db.VarChar(191)

  @@map("LotteryPeriods")
  @@map("lottery_periods")
}

model LotteryResults {
  id        BigInt   @id @default(autoincrement())
  code      String?  @db.VarChar(191)
  periodId  BigInt?
  userId    BigInt?
  state     BigInt?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("LotteryResults")
  @@index([userId], map: "idx_25524_index_lottery_results_on_user_id")
  @@map("lottery_results")
}

model LotteryUsers {
  id           BigInt   @id @default(autoincrement())
  state        BigInt?
  userId       BigInt?
  periodId     BigInt?
  commodityId  BigInt?
  createdAt    DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @map("updated_at") @db.Timestamptz(6)
  number       String?  @db.VarChar(191)
  winningGrade Int?     @default(0) @map("winning_grade") @db.SmallInt
  source       String?  @db.VarChar(32)

  @@map("LotteryUsers")
  @@index([periodId], map: "idx_25530_index_lottery_users_on_period_id")
  @@index([userId], map: "idx_25530_index_lottery_users_on_user_id")
  @@map("lottery_users")
}

model ManufacturerFields {
  id        BigInt   @id @default(autoincrement())
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("ManufacturerFields")
  @@map("manufacturer_fields")
}

model Mentions {
  id              BigInt   @id @default(autoincrement())
  userId          BigInt?
  mentionedUserId BigInt?
  times           BigInt?  @default(0)
  createdAt       DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime @map("updated_at") @db.Timestamptz(6)
  mentionableType String?  @map("mentionable_type") @db.VarChar(255)
  mentionableId   BigInt?

  @@map("Mentions")
  @@index([mentionedUserId], map: "idx_25543_index_mentions_on_mentioned_user_id")
  @@index([userId], map: "idx_25543_index_mentions_on_user_id")
  @@index([mentionableType, mentionableId], map: "idx_25543_mentionable")
  @@map("mentions")
}

model Merchants {
  id            BigInt   @id @default(autoincrement())
  name          String?  @db.VarChar(255)
  address       String?  @db.VarChar(255)
  phone         String?  @db.VarChar(255)
  mobile        String?  @db.VarChar(255)
  lat           Float?
  lng           Float?
  contacter     String?  @db.VarChar(255)
  ownerId       BigInt?
  creatorId     BigInt?
  productsCount BigInt?  @default(0)
  createdAt     DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @map("updated_at") @db.Timestamptz(6)
  locationId    BigInt?
  slogon        String?  @db.VarChar(191)

  @@map("Merchants")
  @@index([creatorId], map: "idx_25550_index_merchants_on_creator_id")
  @@index([locationId], map: "idx_25550_index_merchants_on_location_id")
  @@index([name], map: "idx_25550_index_merchants_on_name")
  @@index([ownerId], map: "idx_25550_index_merchants_on_owner_id")
  @@map("merchants")
}

model MessageGroups {
  id           BigInt   @id @default(autoincrement())
  membersCount BigInt?
  name         String?  @db.VarChar(255)
  bulletin     String?  @db.VarChar(255)
  description  String?  @db.VarChar(255)
  adminId      BigInt?
  createdAt    DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("MessageGroups")
  @@index([adminId], map: "idx_25576_index_message_groups_on_admin_id")
  @@map("message_groups")
}

model MessageSessionUsers {
  id                  BigInt    @id @default(autoincrement())
  userId              BigInt?
  sessionId           BigInt?
  online              Boolean?
  unreadMessagesCount BigInt?
  createdAt           DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt           DateTime  @map("updated_at") @db.Timestamptz(6)
  lastReadAt          DateTime? @map("last_read_at") @db.Timestamptz(6)

  @@map("MessageSessionUsers")
  @@index([sessionId], map: "idx_25595_index_message_session_users_on_session_id")
  @@index([userId], map: "idx_25595_index_message_session_users_on_user_id")
  @@map("message_session_users")
}

model MessageSessions {
  id               BigInt   @id @default(autoincrement())
  messagesCount    BigInt?
  createdAt        DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime @map("updated_at") @db.Timestamptz(6)
  title            String?  @db.VarChar(191)
  usersCount       BigInt?  @default(0)
  multiple         Boolean? @default(false)
  privateSessionId String?  @map("private_session_id") @db.VarChar(32)

  @@map("MessageSessions")
  @@index([privateSessionId], map: "idx_25586_index_message_sessions_on_private_session_id")
  @@map("message_sessions")
}

model Messages {
  id                 BigInt    @id @default(autoincrement())
  userId             BigInt?
  body               String?   @db.VarChar(255)
  createdAt          DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime? @map("updated_at") @db.Timestamptz(6)
  sys                Boolean?  @default(false)
  sessionId          Int?      @map("session_id")
  recipientType      String?   @map("recipient_type") @db.VarChar(255)
  alreadyReadUserIds Int[]     @default([]) @map("already_read_user_ids")

  @@map("Messages")
  @@index([sessionId], map: "idx_25564_index_messages_on_session_id")
  @@index([userId], map: "idx_25564_index_messages_on_user_id")
  @@index([alreadyReadUserIds], map: "index_messages_on_already_read_user_ids", type: Gin)
  @@index([createdAt], map: "index_messages_on_created_at")
  @@map("messages")
}

model MgConversations {
  id        BigInt    @id @default(autoincrement())
  subject   String?   @db.VarChar(100)
  userId    BigInt?
  isEnd     String?   @default("0") @map("is_end") @db.VarChar(1)
  createdAt DateTime? @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @map("updated_at") @db.Timestamp(6)

  @@map("MgConversations")
  @@index([userId], map: "mg_conversations_user_id_index")
  @@map("mg_conversations")
}

model MgMessages {
  id              BigInt    @id @default(autoincrement())
  messageId       String?   @map("message_id") @db.VarChar(100)
  text            String?   @db.VarChar(100)
  role            String?   @db.VarChar(1)
  parentMessageId String?   @map("parent_message_id") @db.VarChar(100)
  conversationId  Int?      @map("conversation_id")
  createdAt       DateTime? @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime? @map("updated_at") @db.Timestamp(6)

  @@map("MgMessages")
  @@index([conversationId], map: "mg_messages_conversation_id_index")
  @@index([messageId], map: "mg_messages_message_id_index")
  @@map("mg_messages")
}

model MgUsers {
  id        BigInt    @id @default(autoincrement())
  userId    Int?      @map("user_id")
  createdAt DateTime? @map("created_at") @db.Timestamp(6)
  updatedAt DateTime? @map("updated_at") @db.Timestamp(6)
  expiresAt DateTime? @map("expires_at") @db.Timestamp(6)

  @@map("MgUsers")
  @@index([userId], map: "mg_users_user_id_index")
  @@map("mg_users")
}

model ModelFieldRecords {
  id            BigInt   @id @default(autoincrement())
  modelId       BigInt?
  modelFieldId  BigInt?
  userId        BigInt?
  value         String?
  modelRecordId BigInt?
  createdAt     DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("ModelFieldRecords")
  @@index([modelFieldId], map: "idx_25628_index_model_field_records_on_model_field_id")
  @@index([modelId], map: "idx_25628_index_model_field_records_on_model_id")
  @@index([userId], map: "idx_25628_index_model_field_records_on_user_id")
  @@map("model_field_records")
}

model ModelFields {
  id          BigInt   @id @default(autoincrement())
  name        String?  @db.VarChar(191)
  type        BigInt?
  required    Boolean?
  maxLength   BigInt?
  minLength   BigInt?
  modelId     BigInt?
  multiple    Boolean? @default(false)
  description String?  @default("") @db.VarChar(191)
  isReadonly  Boolean? @default(false) @map("is_readonly")
  maxSelect   BigInt?
  key         String?  @db.VarChar(191)
  position    BigInt?  @default(0)
  placeholder String?  @db.VarChar(191)
  minValue    Float?   @map("min_value")
  maxValue    Float?   @map("max_value")
  prefix      String?  @db.VarChar(191)
  append      String?  @db.VarChar(191)
  format      String?  @db.VarChar(191)
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)
  meta        Json?
  default     Json?
  options     Json?

  @@map("ModelFields")
  @@index([modelId], map: "idx_25610_index_model_fields_on_model_id")
  @@index([meta], map: "index_model_fields_on_meta", type: Gin)
  @@map("model_fields")
}

model ModelRecords {
  id         BigInt   @id @default(autoincrement())
  modelId    BigInt?
  userId     BigInt?
  recordId   BigInt?
  recordType String?  @map("record_type") @db.VarChar(191)
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)
  value      Json?

  @@map("ModelRecords")
  @@index([modelId], map: "idx_25635_index_model_records_on_model_id")
  @@index([userId], map: "idx_25635_index_model_records_on_user_id")
  @@index([recordId, recordType], map: "idx_25635_object")
  @@index([value], map: "index_model_records_on_value", type: Gin)
  @@map("model_records")
}

model Models {
  id                     BigInt   @id @default(autoincrement())
  name                   String?  @db.VarChar(191)
  userId                 BigInt?
  fieldsCount            BigInt?  @default(0)
  description            String?
  recordsCount           BigInt?  @default(0)
  createdAt              DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt              DateTime @map("updated_at") @db.Timestamptz(6)
  categoryId             BigInt?
  key                    String?  @db.VarChar(191)
  meta                   Json?
  isSingleton            Boolean? @default(false) @map("is_singleton")
  isInplace              Boolean? @default(false) @map("is_inplace")
  maxRecordsCount        Int?     @default(0) @map("max_records_count")
  maxRecordsCountPerUser Int?     @default(0) @map("max_records_count_per_user")

  @@map("Models")
  @@index([key], map: "idx_25600_index_models_on_key")
  @@index([userId], map: "idx_25600_index_models_on_user_id")
  @@index([meta], map: "index_models_on_meta", type: Gin)
  @@map("models")
}

model MoveTheCarCars {
  id            BigInt   @id @default(autoincrement())
  plateNumber   String?  @map("plate_number") @db.VarChar(10)
  model         String?  @db.VarChar(20)
  year          BigInt?
  userId        BigInt?
  state         Int?     @default(0) @db.SmallInt
  createdAt     DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @map("updated_at") @db.Timestamptz(6)
  color         String?  @db.VarChar(18)
  brand         String?  @db.VarChar(32)
  publicUid     String?  @map("public_uid") @db.VarChar(36)
  orderId       BigInt?
  requestsCount BigInt?  @default(0)

  @@map("MoveTheCarCars")
  @@index([orderId], map: "idx_25643_index_move_the_car_cars_on_order_id")
  @@index([plateNumber], map: "idx_25643_index_move_the_car_cars_on_plate_number")
  @@index([publicUid], map: "idx_25643_index_move_the_car_cars_on_public_uid")
  @@index([userId], map: "idx_25643_index_move_the_car_cars_on_user_id")
  @@map("move_the_car_cars")
}

model MoveTheCarRequests {
  id         BigInt    @id @default(autoincrement())
  userId     BigInt?
  carId      BigInt?
  isNotified Boolean?  @default(false) @map("is_notified")
  createdAt  DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime  @map("updated_at") @db.Timestamptz(6)
  note       String?   @db.VarChar(191)
  receivedAt DateTime? @map("received_at") @db.Timestamptz(6)
  replyText  String?   @map("reply_text") @db.VarChar(191)
  publicUid  String?   @map("public_uid") @db.VarChar(36)
  arriveIn   BigInt?
  repliedAt  DateTime? @map("replied_at") @db.Timestamptz(6)
  sessionId  String?   @map("session_id") @db.VarChar(32)

  @@map("MoveTheCarRequests")
  @@index([carId], map: "idx_25655_index_move_the_car_requests_on_car_id")
  @@index([publicUid], map: "idx_25655_index_move_the_car_requests_on_public_uid")
  @@index([userId], map: "idx_25655_index_move_the_car_requests_on_user_id")
  @@map("move_the_car_requests")
}

model MovieFields {
  id                BigInt    @id @default(autoincrement())
  imdb              String?   @db.VarChar(255)
  website           String?   @db.VarChar(255)
  language          String?   @db.VarChar(255)
  aliasName         String?   @map("alias_name") @db.VarChar(255)
  countryId         BigInt?
  length            BigInt?
  releaseOn         DateTime? @map("release_on") @db.Date
  createdAt         DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime  @map("updated_at") @db.Timestamptz(6)
  mainlandReleaseOn DateTime? @map("mainland_release_on") @db.Timestamptz(6)
  seasonsCount      BigInt?   @default(1)
  currentSeason     BigInt?   @default(1)
  year              BigInt?
  episodesCount     BigInt?   @default(1)
  subtype           Int?      @default(0) @db.SmallInt

  @@map("MovieFields")
  @@map("movie_fields")
}

model Navigations {
  id          BigInt    @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  description String?   @db.VarChar(255)
  url         String?   @db.VarChar(255)
  clicks      BigInt?   @default(0)
  createdAt   DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @map("updated_at") @db.Timestamptz(6)
  visible     Boolean?  @default(true)
  position    BigInt?   @default(0)
  websiteId   BigInt?

  @@map("Navigations")
  @@map("navigations")
}

model NextIds {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt?
  currentId BigInt?
  name      String?  @db.VarChar(255)
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("NextIds")
  @@map("next_ids")
}

model Notifications {
  id         BigInt    @id @default(autoincrement())
  userId     BigInt?
  appId      BigInt?
  createdAt  DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)
  new        Boolean?  @default(true)
  notifyType String?   @map("notify_type") @db.VarChar(255)
  data       String?
  templateId BigInt?
  url        String?   @db.VarChar(191)
  image      String?   @db.VarChar(191)
  meta       String?

  @@map("Notifications")
  @@map("notifications")
}

model OauthAccessGrants {
  id                BigInt            @id @default(autoincrement())
  resourceOwnerId   BigInt
  applicationId     BigInt
  token             String            @unique(map: "idx_25710_index_oauth_access_grants_on_token") @db.VarChar(255)
  expiresIn         BigInt
  redirectUri       String            @map("redirect_uri")
  createdAt         DateTime          @map("created_at") @db.Timestamptz(6)
  revokedAt         DateTime?         @map("revoked_at") @db.Timestamptz(6)
  scopes            String?           @db.VarChar(255)
  oauthApplications OauthApplications @relation(fields: [applicationId], references: [id], onUpdate: Restrict, map: "fk_rails_b4b53e07b8")

  @@map("OauthAccessGrants")
  @@index([applicationId], map: "idx_25710_fk_rails_b4b53e07b8")
  @@map("oauth_access_grants")
}

model OauthAccessTokens {
  id                   BigInt             @id @default(autoincrement())
  resourceOwnerId      BigInt?
  applicationId        BigInt?
  token                String             @unique(map: "idx_25718_index_oauth_access_tokens_on_token") @db.VarChar(255)
  refreshToken         String?            @unique(map: "idx_25718_index_oauth_access_tokens_on_refresh_token") @map("refresh_token") @db.VarChar(255)
  expiresIn            BigInt?
  revokedAt            DateTime?          @map("revoked_at") @db.Timestamptz(6)
  createdAt            DateTime           @map("created_at") @db.Timestamptz(6)
  scopes               String?            @db.VarChar(255)
  previousRefreshToken String             @default("") @map("previous_refresh_token") @db.VarChar(255)
  oauthApplications    OauthApplications? @relation(fields: [applicationId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_rails_732cb83ab7")

  @@map("OauthAccessTokens")
  @@index([applicationId], map: "idx_25718_fk_rails_732cb83ab7")
  @@index([resourceOwnerId], map: "idx_25718_index_oauth_access_tokens_on_resource_owner_id")
  @@map("oauth_access_tokens")
}

model OauthApplications {
  id                BigInt              @id @default(autoincrement())
  name              String              @db.VarChar(255)
  uid               String              @unique(map: "idx_25728_index_oauth_applications_on_uid") @db.VarChar(255)
  secret            String              @db.VarChar(255)
  redirectUri       String              @map("redirect_uri")
  scopes            String              @db.VarChar(255)
  createdAt         DateTime            @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime            @map("updated_at") @db.Timestamptz(6)
  confidential      Boolean             @default(true)
  userId            BigInt?
  oauthAccessGrants OauthAccessGrants[]
  oauthAccessTokens OauthAccessTokens[]

  @@map("OauthApplications")
  @@map("oauth_applications")
}

model OauthNonces {
  id        BigInt    @id @default(autoincrement())
  nonce     String?   @db.VarChar(255)
  timestamp BigInt?
  createdAt DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("OauthNonces")
  @@unique([nonce, timestamp], map: "idx_25736_index_oauth_nonces_on_nonce_and_timestamp")
  @@map("oauth_nonces")
}

model OauthProviders {
  id                    BigInt    @id @default(autoincrement())
  name                  String?   @db.VarChar(255)
  userId                BigInt?
  createdAt             DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt             DateTime  @map("updated_at") @db.Timestamptz(6)
  authHash              String?   @map("auth_hash")
  uname                 String?   @db.VarChar(255)
  accessToken           String?   @map("access_token") @db.VarChar(191)
  refreshToken          String?   @map("refresh_token") @db.VarChar(191)
  openid                String?   @db.VarChar(191)
  scope                 String?   @db.VarChar(191)
  expiresIn             BigInt?
  type                  String?   @db.VarChar(32)
  refreshTokenUpdatedAt DateTime? @map("refresh_token_updated_at") @db.Timestamptz(6)
  accessTokenUpdatedAt  DateTime? @map("access_token_updated_at") @db.Timestamptz(6)
  userinfo              String?
  unionid               String?   @db.VarChar(191)
  appId                 String?   @map("app_id") @db.VarChar(191)

  @@map("OauthProviders")
  @@index([appId], map: "idx_25742_index_oauth_providers_on_app_id")
  @@index([name], map: "idx_25742_index_oauth_providers_on_name")
  @@index([userId], map: "idx_25742_index_oauth_providers_on_user_id")
  @@map("oauth_providers")
}

model OauthTokens {
  id                  BigInt    @id @default(autoincrement())
  userId              BigInt?
  type                String?   @db.VarChar(20)
  clientApplicationId BigInt?
  token               String?   @unique(map: "idx_25758_index_oauth_tokens_on_token") @db.VarChar(40)
  secret              String?   @db.VarChar(40)
  callbackUrl         String?   @map("callback_url") @db.VarChar(255)
  verifier            String?   @db.VarChar(20)
  scope               String?   @db.VarChar(255)
  authorizedAt        DateTime? @map("authorized_at") @db.Timestamptz(6)
  invalidatedAt       DateTime? @map("invalidated_at") @db.Timestamptz(6)
  validTo             DateTime? @map("valid_to") @db.Timestamptz(6)
  createdAt           DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt           DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("OauthTokens")
  @@map("oauth_tokens")
}

model OrderItems {
  id                 BigInt   @id @default(autoincrement())
  orderId            BigInt?
  name               String?  @db.VarChar(191)
  price              BigInt?
  discount           BigInt?
  discountAmount     BigInt?
  amount             BigInt?
  subtotal           BigInt?
  remark             String?  @db.VarChar(191)
  createdAt          DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime @map("updated_at") @db.Timestamptz(6)
  snapshot           String?
  skuId              BigInt?
  itemId             BigInt?
  orderableId        BigInt?
  orderableType      String?  @map("orderable_type") @db.VarChar(191)
  totalPrice         BigInt?
  shippingFee        BigInt?  @default(0)
  readableAttrValues Json?    @db.Json

  @@map("OrderItems")
  @@index([itemId], map: "idx_25784_index_order_items_on_item_id")
  @@index([orderId], map: "idx_25784_index_order_items_on_order_id")
  @@index([skuId], map: "idx_25784_index_order_items_on_sku_id")
  @@index([orderableId, orderableType], map: "idx_25784_orderable")
  @@map("order_items")
}

model OrderReturns {
  id                 BigInt   @id @default(autoincrement())
  orderId            BigInt?
  returnId           String?  @map("return_id") @db.VarChar(191)
  expressNo          String?  @map("express_no") @db.VarChar(191)
  consigneeRealname  String?  @map("consignee_realname") @db.VarChar(191)
  consigneeTelphone  String?  @map("consignee_telphone") @db.VarChar(191)
  consigneeTelphone2 String?  @map("consignee_telphone2") @db.VarChar(191)
  consigneeAddress   String?  @map("consignee_address") @db.VarChar(191)
  consigneeZip       String?  @map("consignee_zip") @db.VarChar(191)
  logisticsType      BigInt?
  fee                BigInt?
  returnType         BigInt?
  handlingWay        BigInt?
  returnAmount       BigInt?
  reason             String?  @db.VarChar(191)
  createdAt          DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("OrderReturns")
  @@map("order_returns")
}

model OrderServices {
  id          BigInt   @id @default(autoincrement())
  type        BigInt?
  orderId     BigInt?
  orderItemId BigInt?
  reason      String?  @db.VarChar(191)
  shopId      BigInt?
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)
  userId      BigInt?
  state       BigInt?
  description String?
  quantity    BigInt?  @default(1)

  @@map("OrderServices")
  @@index([shopId], map: "idx_25811_index_order_services_on_shop_id")
  @@map("order_services")
}

model Orders {
  id               BigInt    @id @default(autoincrement())
  orderId          String?   @map("order_id") @db.VarChar(191)
  totalPrice       BigInt?
  userId           BigInt?
  state            BigInt?   @default(0)
  createdAt        DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime  @map("updated_at") @db.Timestamptz(6)
  rated            Boolean?  @default(false)
  shopId           BigInt?
  snapshot         String?
  userAddressId    BigInt?
  orderType        BigInt?   @default(1)
  type             String?   @db.VarChar(191)
  paidAt           DateTime? @map("paid_at") @db.Timestamptz(6)
  completedAt      DateTime? @map("completed_at") @db.Timestamptz(6)
  actuallyPaid     BigInt?
  remark           String?   @db.VarChar(191)
  freightFee       String?   @map("freight_fee")
  pendingAddressId Int?      @map("pending_address_id")
  goodsId          Int?      @map("goods_id")

  @@map("Orders")
  @@index([orderId], map: "idx_25771_index_orders_on_order_id")
  @@map("orders")
}

model Pages {
  id          BigInt   @id @default(autoincrement())
  name        String?  @db.VarChar(255)
  description String?  @db.VarChar(255)
  viewsCount  BigInt?  @default(0)
  fansCount   BigInt?  @default(0)
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("Pages")
  @@map("pages")
}

model Payments {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt?
  type      String?  @db.VarChar(32)
  amount    BigInt?  @default(0)
  state     Int?     @default(0)
  data      String?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)
  orderId   BigInt?

  @@map("Payments")
  @@map("payments")
}

model People {
  id        BigInt   @id @default(autoincrement())
  firstName String?  @map("first_name") @db.VarChar(100)
  lastName  String?  @map("last_name") @db.VarChar(100)
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("People")
  @@map("people")
}

model Permissions {
  id          BigInt   @id @default(autoincrement())
  recordId    BigInt?
  recordType  String?  @map("record_type") @db.VarChar(191)
  name        String?  @db.VarChar(191)
  description String?  @db.VarChar(191)
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("Permissions")
  @@map("permissions")
}

model Photos {
  id            BigInt    @id @default(autoincrement())
  userId        BigInt?
  albumId       BigInt?
  title         String?   @db.VarChar(255)
  tags          String?   @db.VarChar(255)
  createdAt     DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime? @map("updated_at") @db.Timestamptz(6)
  description   String?   @db.VarChar(255)
  visitsCount   BigInt?   @default(0)
  commentsCount BigInt?   @default(0)
  index         Int?      @default(0)

  @@map("Photos")
  @@index([albumId], map: "idx_25858_index_photos_on_album_id")
  @@index([userId], map: "idx_25858_index_photos_on_user_id")
  @@index([index], map: "index_photos_on_index")
  @@map("photos")
}

model PollItemUsers {
  id         BigInt   @id @default(autoincrement())
  pollItemId BigInt?
  userId     BigInt?
  note       String?  @db.VarChar(191)
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)
  pollId     BigInt?

  @@map("PollItemUsers")
  @@index([pollItemId], map: "idx_25888_index_poll_item_users_on_poll_item_id")
  @@index([userId], map: "idx_25888_index_poll_item_users_on_user_id")
  @@map("poll_item_users")
}

model PollItems {
  id         BigInt   @id @default(autoincrement())
  pollId     BigInt?
  color      String?  @db.VarChar(191)
  title      String?  @db.VarChar(191)
  usersCount BigInt?
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("PollItems")
  @@index([pollId], map: "idx_25881_index_poll_items_on_poll_id")
  @@map("poll_items")
}

model Polls {
  id             BigInt    @id @default(autoincrement())
  subject        String?   @db.VarChar(191)
  userId         BigInt?
  state          BigInt?
  expiresAt      DateTime? @map("expires_at") @db.Timestamptz(6)
  usersCount     BigInt?   @default(0)
  itemsCount     BigInt?
  createdAt      DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime  @map("updated_at") @db.Timestamptz(6)
  maxSelectCount BigInt?   @default(1)
  expireDays     BigInt?   @default(10)
  description    String?

  @@map("Polls")
  @@index([state], map: "idx_25870_index_polls_on_state")
  @@index([userId], map: "idx_25870_index_polls_on_user_id")
  @@map("polls")
}

model Posts {
  id             BigInt                   @id @default(autoincrement())
  userId         BigInt?
  categoryId     BigInt?
  locationId     BigInt?
  title          String?                  @db.VarChar(191)
  body           String?
  createdAt      DateTime                 @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime                 @map("updated_at") @db.Timestamptz(6)
  commentsCount  BigInt?                  @default(0)
  favoritesCount BigInt?                  @default(0)
  viewCount      BigInt?                  @default(0)
  state          Int?                     @db.SmallInt
  expiresAt      DateTime?                @map("expires_at") @db.Timestamptz(6)
  visitsCount    BigInt?                  @default(0)
  ip             String?                  @db.Inet
  textSearchable Unsupported("tsvector")? @default(dbgenerated("to_tsvector('zhcfg'::regconfig, (((COALESCE(title, ''::character varying))::text || ' '::text) || body))"))

  @@map("Posts")
  @@index([textSearchable], map: "full_text_idx", type: Gin)
  @@index([categoryId], map: "idx_25894_index_posts_on_category_id")
  @@index([expiresAt], map: "idx_25894_index_posts_on_expires_at")
  @@index([locationId], map: "idx_25894_index_posts_on_location_id")
  @@index([state], map: "idx_25894_index_posts_on_state")
  @@index([userId], map: "idx_25894_index_posts_on_user_id")
  @@map("posts")
}

model Printings {
  id         BigInt    @id @default(autoincrement())
  userId     BigInt?
  amount     BigInt?   @default(1)
  pagesCount BigInt?   @default(0)
  note       String?   @default("") @db.VarChar(191)
  colorful   Boolean?  @default(true)
  paper      BigInt?   @default(0)
  createdAt  DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime  @map("updated_at") @db.Timestamptz(6)
  state      BigInt?   @default(0)
  orderId    BigInt?
  printedAt  DateTime? @map("printed_at") @db.Timestamptz(6)

  @@map("Printings")
  @@index([state], map: "idx_25906_index_printings_on_state")
  @@index([userId], map: "idx_25906_index_printings_on_user_id")
  @@map("printings")
}

model Products {
  id            BigInt    @id @default(autoincrement())
  name          String?   @db.VarChar(255)
  description   String?
  price         BigInt?
  merchantId    BigInt?
  userId        BigInt?
  picturesCount BigInt?   @default(0)
  createdAt     DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime  @map("updated_at") @db.Timestamptz(6)
  categoryId    BigInt?
  content       String?
  model         String?   @db.VarChar(191)
  expiresAt     DateTime? @map("expires_at") @db.Timestamptz(6)
  validDays     BigInt?

  @@map("Products")
  @@map("products")
}

model Profiles {
  id         BigInt    @id @default(autoincrement())
  birthday   DateTime? @db.Date
  zodiac     BigInt?
  country    String?   @db.VarChar(255)
  province   String?   @db.VarChar(255)
  city       String?   @db.VarChar(255)
  street     String?   @db.VarChar(255)
  postcode   String?   @db.VarChar(255)
  mobile     String?   @db.VarChar(255)
  height     BigInt?
  weight     BigInt?
  createdAt  DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)
  locationId BigInt?
  userId     BigInt?
  summary    String?
  qq         String?   @db.VarChar(255)
  wechat     String?   @db.VarChar(255)

  @@map("Profiles")
  @@map("profiles")
}

model Promotions {
  id           BigInt    @id @default(autoincrement())
  itemId       BigInt?
  userId       BigInt?
  startAt      DateTime? @map("start_at") @db.Timestamptz(6)
  endAt        DateTime? @map("end_at") @db.Timestamptz(6)
  discount     BigInt?
  reducedPrice BigInt?
  type         BigInt?
  createdAt    DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime  @map("updated_at") @db.Timestamptz(6)
  amount       BigInt?

  @@map("Promotions")
  @@map("promotions")
}

model Properties {
  id          BigInt   @id @default(autoincrement())
  name        String?  @db.VarChar(191)
  description String?  @db.VarChar(191)
  value       BigInt?
  valueUnit   String?  @map("value_unit") @db.VarChar(191)
  function    String?  @db.VarChar(191)
  categoryId  BigInt?
  classes     String?  @db.VarChar(191)
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)
  type        String?  @db.VarChar(32)
  price       BigInt?

  @@map("Properties")
  @@index([categoryId], map: "idx_25947_index_properties_on_category_id")
  @@index([function], map: "idx_25947_index_properties_on_function")
  @@map("properties")
}

model Recommendations {
  id                BigInt    @id @default(autoincrement())
  recommendableType String?   @map("recommendable_type") @db.VarChar(255)
  recommendableId   BigInt?
  level             BigInt?
  reason            String?   @db.VarChar(255)
  title             String?   @db.VarChar(255)
  visitsCount       BigInt?   @default(0)
  adminId           BigInt?
  userId            BigInt?
  createdAt         DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime  @map("updated_at") @db.Timestamptz(6)
  description       String?   @db.VarChar(255)
  expiresAt         DateTime? @map("expires_at") @db.Timestamptz(6)
  type              String?   @db.VarChar(191)
  score             Int?      @default(0)

  @@map("Recommendations")
  @@index([adminId], map: "idx_25960_index_recommendations_on_admin_id")
  @@index([level], map: "idx_25960_index_recommendations_on_level")
  @@index([type], map: "idx_25960_index_recommendations_on_type")
  @@index([userId], map: "idx_25960_index_recommendations_on_user_id")
  @@index([visitsCount], map: "idx_25960_index_recommendations_on_view_count")
  @@index([recommendableType, recommendableId], map: "idx_25960_recommendable")
  @@index([score], map: "index_recommendations_on_score")
  @@map("recommendations")
}

model Referers {
  id          BigInt   @id @default(autoincrement())
  userId      BigInt?
  refererId   BigInt?
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)
  wechat      String?  @db.VarChar(32)
  phoneNumber String?  @map("phone_number") @db.VarChar(20)
  locationId  BigInt?
  contact     String?  @db.VarChar(30)
  sessionId   BigInt?

  @@map("Referers")
  @@index([locationId], map: "idx_25973_index_referers_on_location_id")
  @@index([phoneNumber], map: "idx_25973_index_referers_on_phone_number")
  @@map("referers")
}

model RelatedRecords {
  id         BigInt   @id @default(autoincrement())
  sourceType String?  @map("source_type") @db.VarChar(32)
  recordType String?  @map("record_type") @db.VarChar(32)
  sourceId   Int?     @map("source_id")
  recordId   Int?     @map("record_id")
  createdAt  DateTime @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamp(6)

  @@map("RelatedRecords")
  @@index([recordType, recordId], map: "related_records_record")
  @@index([sourceType, sourceId], map: "related_records_source")
  @@map("related_records")
}

model Reviews {
  id             BigInt    @id @default(autoincrement())
  body           String?
  userId         BigInt?
  score          Int?      @default(0) @db.SmallInt
  reviewableId   BigInt?
  reviewableType String?   @map("reviewable_type") @db.VarChar(191)
  commentsCount  BigInt?   @default(0)
  visitsCount    BigInt?   @default(0)
  createdAt      DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime  @map("updated_at") @db.Timestamptz(6)
  orderId        BigInt?
  skuId          BigInt?
  itemId         BigInt?
  orderItemId    BigInt?
  favoritesCount BigInt?   @default(0)
  editedAt       DateTime? @map("edited_at") @db.Timestamptz(6)
  appendBody     String?   @map("append_body")
  appendAt       DateTime? @map("append_at") @db.Timestamptz(6)
  shopId         Int?      @map("shop_id")
  extra          Json?     @default("{}")
  reviewableUrl  String?   @default("") @map("reviewable_url") @db.VarChar
  reviewableName String?   @default("") @map("reviewable_name") @db.VarChar

  @@map("Reviews")
  @@index([userId], map: "idx_25981_index_reviews_on_user_id")
  @@index([reviewableId, reviewableType], map: "idx_25981_reviewable")
  @@index([extra], map: "index_reviews_on_extra", type: Gin)
  @@index([shopId], map: "index_reviews_on_shop_id")
  @@map("reviews")
}

model SchemaMigrations {
  version String @id @db.VarChar

  @@map("SchemaMigrations")
  @@map("schema_migrations")
}

model SearchHistories {
  id         BigInt   @id @default(autoincrement())
  userId     BigInt?
  keyword    String?  @db.VarChar(191)
  searchType String?  @map("search_type") @db.VarChar(191)
  count      BigInt?  @default(0)
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("SearchHistories")
  @@index([keyword], map: "idx_25996_index_search_histories_on_keyword")
  @@index([userId], map: "idx_25996_index_search_histories_on_user_id")
  @@map("search_histories")
}

model Sessions {
  id          BigInt    @id @default(autoincrement())
  token       String    @db.VarChar(191)
  userId      BigInt
  userAgent   String    @map("user_agent")
  ip          String?   @default("0.0.0.0") @db.Inet
  visitCount  BigInt?   @default(0)
  lastVisitAt DateTime  @map("last_visit_at") @db.Timestamptz(6)
  createdAt   DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime  @map("updated_at") @db.Timestamptz(6)
  deletedAt   DateTime? @map("deleted_at") @db.Timestamptz(6)

  @@map("Sessions")
  @@index([deletedAt], map: "idx_26004_index_sessions_on_deleted_at")
  @@index([token], map: "idx_26004_index_sessions_on_token")
  @@index([userId], map: "idx_26004_index_sessions_on_user_id")
  @@map("sessions")
}

model Settings {
  id                BigInt   @id @default(autoincrement())
  category          String?  @db.VarChar(191)
  name              String?  @db.VarChar(191)
  value             String?
  valueType         BigInt?
  client            Boolean? @default(true)
  default           String?
  options           String?
  maxSelectCount    BigInt?
  validateRegexp    String?  @map("validate_regexp") @db.VarChar(191)
  validateMaxLength BigInt?
  description       String?  @db.VarChar(191)

  @@map("Settings")
  @@map("settings")
}

model SharedLinks {
  id           BigInt    @id @default(autoincrement())
  url          String?   @db.VarChar(191)
  userId       BigInt?
  visitCount   BigInt?
  lastSharedAt DateTime? @map("last_shared_at") @db.Timestamptz(6)
  createdAt    DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime  @map("updated_at") @db.Timestamptz(6)

  @@map("SharedLinks")
  @@index([userId, url], map: "idx_26025_user_shared_url")
  @@map("shared_links")
}

model ShopFans {
  id        BigInt   @id @default(autoincrement())
  shopId    BigInt?
  userId    BigInt?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("ShopFans")
  @@map("shop_fans")
}

model ShopFields {
  id            BigInt   @id @default(autoincrement())
  address       String?  @db.VarChar(191)
  businessHours String?  @map("business_hours") @db.VarChar(191)
  telephone     String?  @db.VarChar(191)
  mobile        String?  @db.VarChar(191)
  shopId        BigInt?
  createdAt     DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @map("updated_at") @db.Timestamptz(6)
  verified      Boolean? @default(false)
  isYellowPage  Boolean? @default(true) @map("is_yellow_page")
  contacter     String?  @db.VarChar(191)
  slogon        String?  @db.VarChar(191)
  locationId    BigInt?
  domain        String?  @db.VarChar(20)

  @@map("ShopFields")
  @@map("shop_fields")
}

model Shops {
  id        BigInt   @id @default(autoincrement())
  name      String?  @db.VarChar(255)
  lat       Float?
  lng       Float?
  address   String?  @db.VarChar(255)
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("Shops")
  @@map("shops")
}

model Singers {
  id        BigInt   @id @default(autoincrement())
  name      String?  @db.VarChar
  createdAt DateTime @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @map("updated_at") @db.Timestamp(6)

  @@map("Singers")
  @@map("singers")
}

model Songs {
  id        BigInt   @id @default(autoincrement())
  name      String?  @db.VarChar
  fileUrl   String?  @map("file_url") @db.VarChar
  singerId  Int?     @map("singer_id")
  createdAt DateTime @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @map("updated_at") @db.Timestamp(6)

  @@map("Songs")
  @@map("songs")
}

model SpiderPages {
  id            BigInt    @id @default(autoincrement())
  url           String?
  done          Boolean?  @default(false)
  createdAt     DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime? @map("updated_at") @db.Timestamptz(6)
  labelsCount   BigInt?   @default(0)
  labelsHash    String?   @map("labels_hash") @db.VarChar(32)
  published     Boolean?  @default(false)
  fragment      Boolean?  @default(false)
  contentLength BigInt?
  site          String?   @db.VarChar(255)
  urlHash       String?   @map("url_hash") @db.VarChar(32)
  content       String?
  pageId        String?   @map("page_id") @db.VarChar

  @@map("SpiderPages")
  @@index([url], map: "idx_26061_index_spider_pages_on_url")
  @@index([urlHash], map: "idx_26061_index_spider_pages_on_url_hash")
  @@map("spider_pages")
}

model SpiderRules {
  id          BigInt   @id @default(autoincrement())
  key         String?  @db.VarChar(191)
  name        String?  @db.VarChar(191)
  description String?  @db.VarChar(191)
  match       String?  @db.VarChar(191)
  exampleUrls String?  @map("example_urls") @db.VarChar(191)
  labels      String?
  filters     String?
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("SpiderRules")
  @@map("spider_rules")
}

model SpiderSourceLists {
  id             BigInt    @id @default(autoincrement())
  categoryName   String?   @map("category_name") @db.VarChar(50)
  pages          BigInt?
  url            String?   @db.VarChar(255)
  siteName       String?   @map("site_name") @db.VarChar(30)
  enabled        Boolean?  @default(true)
  state          String?   @default("normal") @db.VarChar(15)
  spiderName     String?   @map("spider_name") @db.VarChar(50)
  createdAt      DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime? @map("updated_at") @db.Timestamptz(6)
  lastCrawlAt    DateTime? @map("last_crawl_at") @db.Timestamptz(6)
  lastCrawlCount BigInt?   @default(0)

  @@map("SpiderSourceLists")
  @@map("spider_source_lists")
}

model SpiderSources {
  id         BigInt    @id @default(autoincrement())
  spiderName String?   @map("spider_name") @db.VarChar(255)
  enabled    Boolean?  @default(true)
  position   BigInt?   @default(0)
  sid        String?   @db.VarChar(255)
  createdAt  DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("SpiderSources")
  @@map("spider_sources")
}

model Stats {
  id         BigInt    @id @default(autoincrement())
  year       BigInt?   @default(0)
  month      BigInt?   @default(0)
  day        BigInt?   @default(0)
  hour       BigInt?   @default(0)
  minute     BigInt?   @default(0)
  count      BigInt?   @default(0)
  name       String?   @default("") @db.VarChar(191)
  createdAt  DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime  @map("updated_at") @db.Timestamptz(6)
  precision  BigInt?   @default(0)
  time       DateTime? @db.Timestamptz(6)
  recordId   BigInt?
  recordType String?   @map("record_type") @db.VarChar(191)

  @@map("Stats")
  @@index([recordId, recordType], map: "idx_26110_record")
  @@map("stats")
}

model SubjectCelebrities {
  id          BigInt   @id @default(autoincrement())
  subjectId   BigInt?
  celebrityId BigInt?
  role        String?  @db.VarChar(32)
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("SubjectCelebrities")
  @@index([celebrityId], map: "idx_26144_index_subject_celebrities_on_celebrity_id")
  @@index([subjectId], map: "idx_26144_index_subject_celebrities_on_subject_id")
  @@map("subject_celebrities")
}

model Subjects {
  id               BigInt                   @id @default(autoincrement())
  name             String?                  @db.VarChar(255)
  type             String?                  @db.VarChar(255)
  description      String?
  userId           BigInt?
  categoryId       BigInt?
  reviewsCount     BigInt?                  @default(0)
  collectionsCount BigInt?                  @default(0)
  visitsCount      BigInt?                  @default(0)
  picturesCount    BigInt?                  @default(0)
  fansCount        BigInt?                  @default(0)
  createdAt        DateTime                 @map("created_at") @db.Timestamptz(6)
  updatedAt        DateTime                 @map("updated_at") @db.Timestamptz(6)
  englishName      String?                  @map("english_name") @db.VarChar(255)
  pictureId        BigInt?
  originalName     String?                  @map("original_name") @db.VarChar(255)
  likesCount       BigInt?                  @default(0)
  parentId         BigInt?
  favoritesCount   BigInt?                  @default(0)
  state            BigInt?
  meta             Json?                    @default("{}")
  score            Float?                   @default(0)
  textSearchable   Unsupported("tsvector")? @default(dbgenerated("to_tsvector('zhcfg'::regconfig, (((COALESCE(name, ''::character varying))::text || ' '::text) || description))"))
  articlesCount    Int?                     @default(0) @map("articles_count")
  photosCount      Int?                     @default(0) @map("photos_count")
  linksUpdatedAt   DateTime?                @map("links_updated_at") @db.Timestamp(6)

  @@map("Subjects")
  @@index([textSearchable], map: "full_text_idx_for_subjects", type: Gin)
  @@index([categoryId], map: "idx_26124_index_subjects_on_category_id")
  @@index([state], map: "idx_26124_index_subjects_on_state")
  @@index([userId], map: "idx_26124_index_subjects_on_user_id")
  @@index([linksUpdatedAt], map: "index_subjects_on_links_updated_at")
  @@index([meta], map: "index_subjects_on_meta", type: Gin)
  @@index([name], map: "index_subjects_on_name")
  @@map("subjects")
}

model Taggings {
  id           BigInt    @id @default(autoincrement())
  tagId        BigInt?
  taggableId   BigInt?
  taggableType String?   @map("taggable_type") @db.VarChar(255)
  taggerId     BigInt?
  taggerType   String?   @map("tagger_type") @db.VarChar(255)
  context      String?   @db.VarChar(255)
  createdAt    DateTime? @map("created_at") @db.Timestamptz(6)

  @@map("Taggings")
  @@unique([tagId, taggableId, taggableType, context, taggerId, taggerType], map: "idx_26150_taggings_idx")
  @@index([context], map: "idx_26150_index_taggings_on_context")
  @@index([tagId], map: "idx_26150_index_taggings_on_tag_id")
  @@index([taggableId], map: "idx_26150_index_taggings_on_taggable_id")
  @@index([taggableId, taggableType, context], map: "idx_26150_index_taggings_on_taggable_id_and_taggable_type_and_c")
  @@index([taggableType], map: "idx_26150_index_taggings_on_taggable_type")
  @@index([taggerId], map: "idx_26150_index_taggings_on_tagger_id")
  @@index([taggerId, taggerType], map: "idx_26150_index_taggings_on_tagger_id_and_tagger_type")
  @@index([taggableId, taggableType, taggerId, context], map: "idx_26150_taggings_idy")
  @@map("taggings")
}

model Tags {
  id            BigInt  @id @default(autoincrement())
  name          String? @unique(map: "idx_26160_index_tags_on_name") @db.VarChar(255)
  taggingsCount BigInt? @default(0)
  count         BigInt? @default(0)

  @@map("Tags")
  @@map("tags")
}

model TaskQueues {
  id            BigInt    @id @default(autoincrement())
  queueableType String?   @map("queueable_type") @db.VarChar(32)
  queueableId   BigInt?
  data          String?
  state         Int?      @db.SmallInt
  runAt         DateTime? @map("run_at") @db.Timestamptz(6)
  userId        BigInt?
  action        String?   @db.VarChar(191)
  result        String?
  lastRunAt     DateTime? @map("last_run_at") @db.Timestamptz(6)
  createdAt     DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime  @map("updated_at") @db.Timestamptz(6)

  @@map("TaskQueues")
  @@index([runAt], map: "idx_26168_index_task_queues_on_run_at")
  @@index([state], map: "idx_26168_index_task_queues_on_state")
  @@index([userId], map: "idx_26168_index_task_queues_on_user_id")
  @@index([queueableId, queueableType], map: "idx_26168_queueable")
  @@map("task_queues")
}

model TeleplayFields {
  id            BigInt    @id @default(autoincrement())
  language      String?   @db.VarChar(255)
  season        Int?
  episodesCount BigInt?   @default(0)
  createdAt     DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime  @map("updated_at") @db.Timestamptz(6)
  releaseOn     DateTime? @map("release_on") @db.Timestamp(6)
  website       String?   @db.VarChar(255)
  aliasName     String?   @map("alias_name") @db.VarChar(255)
  countryId     BigInt?
  seasonsCount  BigInt?   @default(1)
  currentSeason BigInt?   @default(1)
  updateWeekday Int?      @default(0) @map("update_weekday") @db.SmallInt
  teleplayType  BigInt?   @default(0)
  finished      Boolean?  @default(false)

  @@map("TeleplayFields")
  @@map("teleplay_fields")
}

model TeleplaySeasonFields {
  id        BigInt   @id @default(autoincrement())
  season    BigInt?  @default(1)
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("TeleplaySeasonFields")
  @@map("teleplay_season_fields")
}

model TeleplaySeasons {
  id                BigInt    @id @default(autoincrement())
  teleplayId        BigInt?
  year              BigInt?
  releaseOn         DateTime? @map("release_on") @db.Timestamptz(6)
  episodesCount     Int?      @default(1) @map("episodes_count") @db.SmallInt
  lastEpisodeNumber BigInt?   @default(0)
  updateOn          BigInt?
  createdAt         DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime  @map("updated_at") @db.Timestamptz(6)

  @@map("TeleplaySeasons")
  @@map("teleplay_seasons")
}

model Templates {
  id          BigInt   @id @default(autoincrement())
  content     String?
  fingerprint String?  @db.VarChar(191)
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("Templates")
  @@index([fingerprint], map: "idx_26205_index_templates_on_fingerprint")
  @@map("templates")
}

model TextDigests {
  id     BigInt  @id @default(autoincrement())
  text   String?
  digest String? @db.VarChar(191)

  @@map("TextDigests")
  @@map("text_digests")
}

model TicketReplies {
  id        BigInt   @id @default(autoincrement())
  content   String?
  userId    BigInt?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)
  ticketId  BigInt?

  @@map("TicketReplies")
  @@index([ticketId], map: "idx_26229_index_ticket_replies_on_ticket_id")
  @@map("ticket_replies")
}

model Tickets {
  id            BigInt    @id @default(autoincrement())
  title         String?   @db.VarChar(191)
  content       String?
  state         BigInt?
  userId        BigInt?
  lastRepliedAt DateTime? @map("last_replied_at") @db.Timestamptz(6)
  createdAt     DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime  @map("updated_at") @db.Timestamptz(6)

  @@map("Tickets")
  @@map("tickets")
}

model TreeNodes {
  id            BigInt    @id @default(autoincrement())
  type          String?   @db.VarChar(255)
  name          String?   @db.VarChar(255)
  description   String?   @db.VarChar(255)
  userId        BigInt?
  objectsCount  BigInt?   @default(0)
  createdAt     DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime? @map("updated_at") @db.Timestamptz(6)
  ancestry      String?   @db.VarChar(255)
  ancestryDepth BigInt?
  position      BigInt?   @default(0)
  state         BigInt?   @default(0)
  sid           String?   @db.VarChar(32)
  visible       Boolean?  @default(true)
  modelId       BigInt?
  childrenCount BigInt?   @default(0)

  @@map("TreeNodes")
  @@index([sid], map: "idx_26236_index_tree_nodes_on_sid")
  @@index([type], map: "idx_26236_index_tree_nodes_on_type")
  @@index([userId], map: "idx_26236_index_tree_nodes_on_user_id")
  @@map("tree_nodes")
}

model Tweets {
  id              BigInt    @id @default(autoincrement())
  userId          BigInt?
  commentsCount   BigInt?   @default(0)
  message         String?   @db.VarChar(255)
  createdAt       DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime? @map("updated_at") @db.Timestamptz(6)
  url             String?   @db.VarChar(255)
  musicUrl        String?   @map("music_url") @db.VarChar(255)
  videoUrl        String?   @map("video_url") @db.VarChar(255)
  privacy         Int?      @default(0) @db.SmallInt
  pictureFileName String?   @map("picture_file_name") @db.VarChar(255)

  @@map("Tweets")
  @@map("tweets")
}

model UserAddresses {
  id          BigInt   @id @default(autoincrement())
  consignee   String?  @db.VarChar(20)
  locationId  BigInt?
  zipcode     String?  @db.VarChar(20)
  tel         String?  @db.VarChar(20)
  mobile      String?  @db.VarChar(20)
  bestTime    String?  @map("best_time") @db.VarChar(50)
  name        String?  @db.VarChar(20)
  address     String?  @db.VarChar(100)
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)
  userId      BigInt?
  isDefault   Boolean? @default(false) @map("is_default")
  addressType BigInt?
  position    BigInt?  @default(1)

  @@map("UserAddresses")
  @@index([locationId], map: "idx_26299_index_user_addresses_on_location_id")
  @@map("user_addresses")
}

model UserCoupons {
  id        BigInt    @id @default(autoincrement())
  userId    BigInt?
  couponId  BigInt?
  state     BigInt?
  sn        String?   @db.VarChar(191)
  usedAt    DateTime? @map("used_at") @db.Timestamptz(6)
  orderId   BigInt?
  createdAt DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @map("updated_at") @db.Timestamptz(6)

  @@map("UserCoupons")
  @@map("user_coupons")
}

model UserFollows {
  id         BigInt    @id @default(autoincrement())
  userId     BigInt?
  followerId BigInt?
  createdAt  DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("UserFollows")
  @@index([userId, followerId], map: "idx_26319_user_follow")
  @@map("user_follows")
}

model UserGroupPermissions {
  id           BigInt   @id @default(autoincrement())
  userGroupId  BigInt?
  permissionId BigInt?
  enabled      Boolean? @default(false)
  createdAt    DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("UserGroupPermissions")
  @@map("user_group_permissions")
}

model UserGroups {
  id            BigInt   @id @default(autoincrement())
  name          String?  @db.VarChar(255)
  description   String?  @db.VarChar(255)
  creditsHigher BigInt?
  avatar        String?  @db.VarChar(255)
  usersCount    BigInt?
  level         BigInt?
  color         String?  @db.VarChar(255)
  autoUpgrade   Boolean? @default(true) @map("auto_upgrade")
  permissions   String?
  settings      Json?    @default("{}")

  @@map("UserGroups")
  @@map("user_groups")
}

model UserProducts {
  id        BigInt    @id @default(autoincrement())
  userId    BigInt?
  productId BigInt?
  orderId   BigInt?
  createdAt DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime  @map("updated_at") @db.Timestamptz(6)
  expiresAt DateTime? @map("expires_at") @db.Timestamptz(6)

  @@map("UserProducts")
  @@map("user_products")
}

model UserProperties {
  id         BigInt   @id @default(autoincrement())
  count      BigInt?  @default(0)
  propertyId BigInt?
  userId     BigInt?
  createdAt  DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("UserProperties")
  @@index([propertyId], map: "idx_26347_index_user_properties_on_property_id")
  @@index([userId], map: "idx_26347_index_user_properties_on_user_id")
  @@map("user_properties")
}

model UserStats {
  id                      BigInt   @id @default(autoincrement())
  commentsCount           BigInt?  @default(0)
  favoritesCount          BigInt?  @default(0)
  ordersCount             BigInt?  @default(0)
  friendshipsCount        BigInt?  @default(0)
  albumsCount             BigInt?  @default(0)
  tweetsCount             BigInt?  @default(0)
  blogsCount              BigInt?  @default(0)
  fansCount               BigInt?  @default(0)
  postsCount              BigInt?  @default(0)
  groupTopicsCount        BigInt?  @default(0)
  groupPostsCount         BigInt?  @default(0)
  completedOrdersCount    BigInt?  @default(0)
  unpaiedOrdersCount      BigInt?  @default(0)
  paiedOrdersCount        BigInt?  @default(0)
  pendingFriendshipsCount BigInt?  @default(0)
  blockedFriendshipsCount BigInt?  @default(0)
  normalFriendshipsCount  BigInt?  @default(0)
  userId                  BigInt?
  createdAt               DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt               DateTime @map("updated_at") @db.Timestamptz(6)
  cartItemsCount          BigInt?  @default(0)

  @@map("UserStats")
  @@map("user_stats")
}

model Users {
  id                BigInt    @id @default(autoincrement())
  username          String?   @db.VarChar(255)
  money             BigInt?   @default(0)
  email             String?   @db.VarChar(255)
  createdAt         DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime? @map("updated_at") @db.Timestamptz(6)
  nickname          String?   @db.VarChar(255)
  gender            BigInt?
  age               BigInt?
  lastRequestAt     DateTime? @map("last_request_at") @db.Timestamptz(6)
  coins             BigInt?   @default(0)
  credits           BigInt?   @default(0)
  userGroupId       BigInt?
  followsCount      BigInt?   @default(0)
  signInCount       BigInt?   @default(0)
  unconfirmedEmail  String?   @map("unconfirmed_email") @db.VarChar(255)
  failedAttempts    BigInt?   @default(0)
  encryptedPassword String?   @map("encrypted_password") @db.VarChar(255)
  adminGroupId      BigInt?
  locationId        BigInt?
  domain            String    @db.VarChar(20)
  commentsCount     BigInt?   @default(0)
  cellPhoneNumber   String?   @map("cell_phone_number") @db.VarChar(191)
  groupRepliesCount BigInt?   @default(0)
  permissions       String?
  settings          Json?
  state             Int?      @default(0)

  @@map("Users")
  @@index([domain], map: "idx_26267_index_users_on_domain")
  @@index([email], map: "idx_26267_index_users_on_email_and_password")
  @@map("users")
}

model Variables {
  id        BigInt   @id @default(autoincrement())
  key       String?  @db.VarChar(64)
  value     String?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("Variables")
  @@index([key], map: "idx_26376_index_variables_on_key")
  @@map("variables")
}

model VerificationCodes {
  id              BigInt    @id @default(autoincrement())
  code            String?   @db.VarChar(191)
  purpose         String?   @db.VarChar(191)
  createdAt       DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime  @map("updated_at") @db.Timestamptz(6)
  lastDeliveredAt DateTime? @map("last_delivered_at") @db.Timestamptz(6)
  expiresIn       BigInt?   @default(0)
  acceptor        String?   @db.VarChar(64)
  type            String?   @db.VarChar(64)
  data            String?
  failedCount     BigInt?   @default(0)
  revoked         Boolean?  @default(false)
  verified        Boolean?  @default(false)
  creatorId       BigInt?

  @@map("VerificationCodes")
  @@map("verification_codes")
}

model Videos {
  id          BigInt   @id @default(autoincrement())
  type        String?  @db.VarChar(191)
  url         String?  @db.VarChar(191)
  visitsCount BigInt?
  title       String?  @db.VarChar(191)
  description String?
  userId      BigInt?
  categoryId  BigInt?
  createdAt   DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("Videos")
  @@map("videos")
}

model Visits {
  id            BigInt    @id @default(autoincrement())
  visitableId   BigInt?
  visitableType String?   @map("visitable_type") @db.VarChar(255)
  userId        BigInt?
  sessionId     String?   @map("session_id") @db.VarChar(255)
  createdAt     DateTime? @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime? @map("updated_at") @db.Timestamptz(6)
  visitCount    BigInt?   @default(0)
  lastVisitAt   DateTime? @map("last_visit_at") @db.Timestamptz(6)
  url           String?   @db.VarChar(191)
  ip            String?   @db.Inet
  title         String?   @db.VarChar
  from          String?   @default("") @db.VarChar(32)

  @@map("Visits")
  @@index([updatedAt], map: "idx_26409_index_visits_on_updated_at")
  @@index([url], map: "idx_26409_index_visits_on_url")
  @@index([visitCount], map: "idx_26409_index_visits_on_visit_count")
  @@index([visitableId, visitableType], map: "idx_26409_index_visits_on_visitable")
  @@index([sessionId, updatedAt], map: "idx_26409_session_id_and_updated_at")
  @@index([userId, sessionId], map: "idx_26409_user_id_session_id")
  @@map("visits")
}

model Webpages {
  id        BigInt   @id @default(autoincrement())
  title     String?  @db.VarChar(191)
  body      String?
  url       String?  @db.VarChar(191)
  websiteId BigInt?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)
  userId    BigInt?

  @@map("Webpages")
  @@index([userId], map: "idx_26421_index_webpages_on_user_id")
  @@map("webpages")
}

model Websites {
  id        BigInt   @id @default(autoincrement())
  name      String?  @db.VarChar(191)
  userId    BigInt?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)
  ownerId   BigInt?
  ownerType String?  @map("owner_type") @db.VarChar(191)

  @@map("Websites")
  @@index([ownerId, ownerType], map: "idx_26430_owner")
  @@map("websites")
}

model WeixinMessages {
  id        BigInt   @id @default(autoincrement())
  uid       String?  @db.VarChar(191)
  message   String?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)
  context   String?  @db.VarChar(191)

  @@map("WeixinMessages")
  @@map("weixin_messages")
}

model WeixinPosts {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt?
  openid    String?  @db.VarChar(191)
  title     String?  @db.VarChar(191)
  body      String?
  images    String?
  position  String?
  createdAt DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("WeixinPosts")
  @@index([userId], map: "idx_26446_index_weixin_posts_on_user_id")
  @@map("weixin_posts")
}

model WeixinUsers {
  id             BigInt   @id @default(autoincrement())
  subscribe      Boolean? @default(false)
  openid         String?  @db.VarChar(32)
  nickname       String?  @db.VarChar(32)
  sex            Int?     @default(0) @db.SmallInt
  language       String?  @db.VarChar(20)
  city           String?  @db.VarChar(20)
  province       String?  @db.VarChar(10)
  country        String?  @db.VarChar(20)
  headimgurl     String?  @db.VarChar(191)
  subscribeTime  BigInt?
  unionid        String?  @db.VarChar(32)
  remark         String?  @default("") @db.VarChar(191)
  groupid        BigInt?  @default(0)
  tagidList      String?  @map("tagid_list")
  subscribeScene String?  @map("subscribe_scene") @db.VarChar(30)
  qrScene        Int?     @map("qr_scene") @db.SmallInt
  qrSceneStr     String?  @map("qr_scene_str") @db.VarChar(191)
  createdAt      DateTime @map("created_at") @db.Timestamptz(6)
  updatedAt      DateTime @map("updated_at") @db.Timestamptz(6)

  @@map("WeixinUsers")
  @@index([openid], map: "idx_26455_index_weixin_users_on_openid")
  @@index([unionid], map: "idx_26455_index_weixin_users_on_unionid")
  @@map("weixin_users")
}
